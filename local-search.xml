<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Flutter 异常解决方案</title>
    <link href="/2023/07/24/flutter/flutter_004/"/>
    <url>/2023/07/24/flutter/flutter_004/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/flutter/flutter_bg_04.jpg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">这篇文章主要涉及 Flutter 项目运行时的各类问题<br></code></pre></td></tr></table></figure><h2 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h2><p>运行时报 <code>Android v1 embedding</code> 问题</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━<br>The detected reason was:<br>  <span class="hljs-regexp">/Users/</span>jiangxr<span class="hljs-regexp">/Gitee/</span>Flutter_shop<span class="hljs-regexp">/android/</span>app<span class="hljs-regexp">/src/m</span>ain/AndroidManifest.xml uses `android:name=<span class="hljs-string">&quot;io.flutter.app.FlutterApplication&quot;</span>`<br>━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━<br>Build failed due to use of deprecated Android v1 embedding.<br></code></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ul><li><p>1、找到 <code>manifest</code> 文件中的 <code>application</code> 配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">application</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;io.flutter.app.FlutterApplication&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:label</span>=<span class="hljs-string">&quot;zdk_app&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:icon</span>=<span class="hljs-string">&quot;@mipmap/ic_launcher&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、删除掉 <code>android:name</code> 属性</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">android:</span>name=<span class="hljs-string">&quot;io.flutter.app.FlutterApplication&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>3、将如下 <code>&lt;meta-data&gt;</code> 插入到 <code>&lt;activity&gt;</code> 标签下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">meta-data</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;flutterEmbedding&quot;</span> <span class="hljs-attr">android:value</span>=<span class="hljs-string">&quot;2&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>flutter</category>
      
    </categories>
    
    
    <tags>
      
      <tag>flutter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>牛客算法题 NC1 - 大数加法</title>
    <link href="/2023/06/07/algorithm/nowcoder_001/"/>
    <url>/2023/06/07/algorithm/nowcoder_001/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/algorithm/nowcoder_001.jpeg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">1、后疫情时代，伴随着互联网行业的衰退，移动端开发岗急剧的减少。<br>2、当前环境下，研发人员的竞争尤其激烈，算法，成为研发人员的基础课。<br></code></pre></td></tr></table></figure><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ul><li>字符串</li></ul><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><ul><li>以字符串的形式读入两个数字，编写一个函数计算它们的和，以字符串形式返回。</li><li>数据范围: s.length, t.length ≤ 100000</li><li>要求：时间复杂度 O(n)</li></ul><h2 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h2><ul><li>输入：”1”, “99”</li><li>返回值：”100”</li><li>说明：1+99&#x3D;100</li></ul><h2 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h2><ul><li>输入：”114514”, “”</li><li>返回值：”114514”</li></ul><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ul><li>这是典型的字符串遍历问题</li><li>从右至左对字符串进行遍历相加求和，注意的是进位</li><li>由于字符串长度不一定相同，最好是插0来保持长度的一致性</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * 计算两个数之和</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> s string字符串 表示第一个整数</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> t string字符串 表示第二个整数</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> string 字符串</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">solve</span>(<span class="hljs-params">s, t</span>) &#123;<br>    <span class="hljs-comment">// 拿到两字符串的最大长度</span><br>    <span class="hljs-keyword">let</span> maxLen = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(s.<span class="hljs-property">length</span>, t.<span class="hljs-property">length</span>);<br>    <span class="hljs-comment">// 对两字符串前面补0，保持长度一致</span><br>    s = s.<span class="hljs-title function_">padStart</span>(maxLen, <span class="hljs-string">&#x27;0&#x27;</span>);<br>    t = t.<span class="hljs-title function_">padStart</span>(maxLen, <span class="hljs-string">&#x27;0&#x27;</span>);<br>    <span class="hljs-comment">// 以字符串作为 res 返回</span><br>    <span class="hljs-keyword">let</span> res = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-comment">// 注意进位</span><br>    <span class="hljs-keyword">let</span> offset = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (maxLen &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-comment">// 字符串转字符，可以直接通过 +、- 等符号转换</span><br>        <span class="hljs-keyword">let</span> x = +s[maxLen - <span class="hljs-number">1</span>];<br>        <span class="hljs-keyword">let</span> y = +t[maxLen - <span class="hljs-number">1</span>];<br>        <span class="hljs-comment">// 在求值时一定要注意进位</span><br>        <span class="hljs-keyword">let</span> v = x + y + offset;<br>        <span class="hljs-keyword">if</span> (v &gt; <span class="hljs-number">9</span>) &#123;<br>            v -= <span class="hljs-number">10</span>;<br>            offset = <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            offset = <span class="hljs-number">0</span>;<br>        &#125;<br>        res = v + res;<br>        maxLen--;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (offset &gt; <span class="hljs-number">0</span>) res = offset + res;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>1、通过 <code>padStart</code>、<code>padEnd</code> 方法可以在字符串前后插入字符，方便字符串长度对齐</li><li>2、通过 <code>s[index]</code> 可以直接获取到字符串 <code>index</code> 对应的字符</li><li>3、通过 <code>+</code>、<code>-</code>、<code>*</code>、<code>/</code>、<code>%</code> 等可以直接将字符串转为数字</li></ul>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>经典算法题 - 回文子串</title>
    <link href="/2023/02/21/algorithm/algorithm_003/"/>
    <url>/2023/02/21/algorithm/algorithm_003/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/algorithm/algorithm_bg_003.jpeg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">经济萧条导致了移动端开发岗的锐减，当前环境下研发人员的竞争尤其激烈。算法，成为了面试大厂的必备条件。<br></code></pre></td></tr></table></figure><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ul><li>双指针、中心拓展法、动态规划</li></ul><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><ul><li>给你一个字符串 s ，请你统计并返回这个字符串中 回文子串 的数目。</li><li>回文字符串 是正着读和倒过来读一样的字符串。</li><li>子字符串 是字符串中的由连续字符组成的一个序列。</li><li>具有不同开始位置或结束位置的子串，即使是由相同的字符组成，也会被视作不同的子串。</li></ul><h2 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h2><ul><li>输入：s &#x3D; “abc”</li><li>输出：3</li><li>解释：三个回文子串: “a”, “b”, “c”</li></ul><h2 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h2><ul><li>输入：s &#x3D; “aaa”</li><li>输出：6</li><li>解释：6个回文子串: “a”, “a”, “a”, “aa”, “aa”, “aaa”</li></ul><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ul><li>这题我第一时间想到暴力破解法求解，虽然能 AC，但效果不佳。</li><li>标准的解法是使用中心拓展法，创新思维。</li><li>当然，动态规划也是一个好解法</li></ul><h2 id="代码1，暴力法"><a href="#代码1，暴力法" class="headerlink" title="代码1，暴力法"></a>代码1，暴力法</h2><ul><li>暴力法的基本思路是找出 s 的所有子串，</li><li>对所有子串一一判断是否为回文</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 暴力法，直接找出字符串 s 的所有子串，判断是否为回文</span><br><span class="hljs-comment"> * 如果是回文则 res + 1</span><br><span class="hljs-comment"> * 最后返回总数 res</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">solution</span>(<span class="hljs-params">s</span>) &#123;<br>    <span class="hljs-comment">// 单字符串直接返回</span><br>    <span class="hljs-keyword">if</span> (s.<span class="hljs-property">length</span> === <span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-comment">// 返回值</span><br>    <span class="hljs-keyword">let</span> res = <span class="hljs-number">0</span>;<br>    <span class="hljs-comment">// 单次截取子串长度</span><br>    <span class="hljs-keyword">let</span> len = <span class="hljs-number">1</span>;<br>    <span class="hljs-comment">// 准备用循环来截取子串</span><br>    <span class="hljs-keyword">while</span> (len &lt;= s.<span class="hljs-property">length</span>) &#123;<br>        <span class="hljs-comment">// 注意判断条件</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt;= s.<span class="hljs-property">length</span> - len; i++) &#123;<br>            <span class="hljs-comment">// 一定要注意，substring 的两个参数是 start 和 end，和Java不一样</span><br>            <span class="hljs-keyword">let</span> temp = s.<span class="hljs-title function_">substring</span>(i, i + len);<br>            <span class="hljs-comment">// 如果是回文，则 + 1</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isHuiWen</span>(temp)) &#123;<br>                res++;<br>            &#125;<br>        &#125;<br>        len++;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 判断字符串 s 是否为回文</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isHuiWen</span>(<span class="hljs-params">s</span>) &#123;<br>    <span class="hljs-keyword">if</span> (s.<span class="hljs-property">length</span> === <span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">let</span> l = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">let</span> r = s.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (l &lt; r) &#123;<br>        <span class="hljs-keyword">if</span> (s.<span class="hljs-title function_">charAt</span>(l++) !== s.<span class="hljs-title function_">charAt</span>(r--)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="代码2，中心拓展法"><a href="#代码2，中心拓展法" class="headerlink" title="代码2，中心拓展法"></a>代码2，中心拓展法</h2><ul><li>中心拓展法的基本思路是从 s 的任意位置进行单或双子字符进行拓展判断。</li><li>如果子字符串是回文，则向左右拓展</li><li>一直拓展到不能拓展为止</li><li>其难点在于循环的长度，</li><li>另外要格外注意 JavaScript 和 Java 之间的差异点</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 中心拓展法，其基本思想为:</span><br><span class="hljs-comment"> * 由中心点开始判断是否为回文，是回文则向外拓展到不是回文为止</span><br><span class="hljs-comment"> * 中心点的位置是本题的关键，举个例子，abcd 四个字符的拓展点有:</span><br><span class="hljs-comment"> * 00 -&gt; (a), 01 -&gt; (ab),</span><br><span class="hljs-comment"> * 11 -&gt; (b), 12 -&gt; (bc),</span><br><span class="hljs-comment"> * 22 -&gt; (c), 23 -&gt; (cd),</span><br><span class="hljs-comment"> * 33 -&gt; (d)</span><br><span class="hljs-comment"> * 也就是说一共有 2n - 1个开始点，坐标分别为 l = i / 2, r = (i + 1) / 2</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">countSubstrings</span>(<span class="hljs-params">s</span>) &#123;<br>    <span class="hljs-keyword">let</span> res = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">let</span> len = s.<span class="hljs-property">length</span>;<br>    <span class="hljs-comment">// 注意遍历数据的长度，上面的注释解释了为什么是 2n - 1</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; len * <span class="hljs-number">2</span> - <span class="hljs-number">1</span>; i++) &#123;<br>        <span class="hljs-comment">// 注意 JavaScript 和 Java 不一样，整数相除为小数，坑啊</span><br>        <span class="hljs-keyword">let</span> l = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(i / <span class="hljs-number">2</span>);<br>        <span class="hljs-keyword">let</span> r = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((i + <span class="hljs-number">1</span>) / <span class="hljs-number">2</span>);<br>        <span class="hljs-comment">// 注意 l-- 和 r++ 才是左右拓展，别搞反了，搞反了就是死循环</span><br>        <span class="hljs-keyword">while</span> (l &gt;= <span class="hljs-number">0</span> &amp;&amp; r &lt; len &amp;&amp; s.<span class="hljs-title function_">charAt</span>(l--) === s.<span class="hljs-title function_">charAt</span>(r++)) &#123;<br>            res++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>回文子串这类题其实用双指针很好解决</li><li>中心拓展法是解决回文类题的关键点</li><li>动态规划也是其解法之一</li></ul>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>经典算法题 - 每日温度</title>
    <link href="/2023/02/20/algorithm/algorithm_002/"/>
    <url>/2023/02/20/algorithm/algorithm_002/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/algorithm/algorithm_bg_002.jpeg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">经济萧条导致了移动端开发岗的锐减，当前环境下研发人员的竞争尤其激烈。算法，成为了面试大厂的必备条件。<br></code></pre></td></tr></table></figure><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ul><li>单调栈</li></ul><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><ul><li>给定一个整数数组 <code>temperatures</code>，表示每天的温度，返回一个数组 <code>answer</code>，其中 <code>answer[i]</code> 是指对于第 <code>i</code> 天，下一个更高温度出现在几天后。</li><li>如果气温在这之后都不会升高，请在该位置用 <code>0</code> 来代替。</li></ul><h2 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h2><ul><li>输入: temperatures &#x3D; [73,74,75,71,69,72,76,73]</li><li>输出：[1,1,4,2,1,1,0,0]</li></ul><h2 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h2><ul><li>输入: temperatures &#x3D; [30,40,50,60]</li><li>输出: [1,1,1,0]</li></ul><h2 id="示例3"><a href="#示例3" class="headerlink" title="示例3"></a>示例3</h2><ul><li>输入: temperatures &#x3D; [30,60,90]</li><li>输出: [1,1,0]</li></ul><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ul><li>这题可以用暴力破解法求解，也是我第一时间的解法，虽然能 AC，但效果不佳。</li><li>标准的解法是使用单调栈求解，比较新颖。</li></ul><h2 id="代码1，暴力法"><a href="#代码1，暴力法" class="headerlink" title="代码1，暴力法"></a>代码1，暴力法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">dailyTemperatures</span>(<span class="hljs-params">arr</span>) &#123;<br>    <span class="hljs-keyword">let</span> res = [];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; arr.<span class="hljs-property">length</span>; i++) &#123;<br>        res.<span class="hljs-title function_">push</span>(<span class="hljs-title function_">findNext</span>(arr, i));<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 暴力法，直接从当前元素后边找到第一个大于它的位置</span><br><span class="hljs-comment"> * 找不到则为0</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">findNext</span>(<span class="hljs-params">arr, index</span>) &#123;<br>    <span class="hljs-keyword">if</span> (index &gt;= arr.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = index + <span class="hljs-number">1</span>; i &lt; arr.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">if</span> (arr[index] &lt; arr[i]) &#123;<br>            <span class="hljs-keyword">return</span> i - index;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="代码2，单调栈"><a href="#代码2，单调栈" class="headerlink" title="代码2，单调栈"></a>代码2，单调栈</h2><ul><li>单调栈的基本思路是维护一个单调递增或单调递减的栈，由于题目只要下标，栈中保存下标即可</li><li>在遍历输入数组的过程中进行判断：</li><li>如果栈为空则入栈</li><li>如果当前元素小于或等于栈顶元素，意味着在降温，入栈</li><li>如果当前元素大于栈顶元素，意味着最少找到了一个升温的位置，更新返回的数组下标</li><li>如果遍历完了栈中仍有元素，则将栈中的元素对应的下标赋值为0</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 单调栈解法：</span><br><span class="hljs-comment"> * 维护一个单调递减的栈，遍历原数组，对其值则进行比较，</span><br><span class="hljs-comment"> * 如果栈为空，则直接入栈</span><br><span class="hljs-comment"> * 如果栈顶元素较大，也直接入栈</span><br><span class="hljs-comment"> * 如果栈顶元素较小，意味着新的元素为之前元素的一个升值，取出栈中元素并更新其差值</span><br><span class="hljs-comment"> * 如果原数据遍历完后栈仍有元素，则栈中元素对应位置找不到升值的点，对应的差值为0</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">solution</span>(<span class="hljs-params">arr</span>) &#123;<br>    <span class="hljs-comment">// 创建同样长度的结果数组</span><br>    <span class="hljs-keyword">let</span> res = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(arr.<span class="hljs-property">length</span>);<br>    <span class="hljs-comment">// 创建单调栈</span><br>    <span class="hljs-keyword">let</span> stack = [];<br>    <span class="hljs-comment">// 遍历数组元素</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; arr.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-comment">// 如果单调栈为空则入栈</span><br>        <span class="hljs-keyword">if</span> (stack.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>) &#123;<br>            stack.<span class="hljs-title function_">push</span>(i);<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-comment">// 循环读栈</span><br>        <span class="hljs-keyword">while</span> (stack.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">// 拿到栈顶元素</span><br>            <span class="hljs-keyword">let</span> index = stack[stack.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>];<br>            <span class="hljs-comment">// 如果当前元素比栈顶还小，则要入栈</span><br>            <span class="hljs-keyword">if</span> (arr[i] &lt;= arr[index]) <span class="hljs-keyword">break</span>;<br>            <span class="hljs-comment">// 如果当前元素比栈顶的大，即找到了一个升温的位置，更新栈顶元素的位置的值为两者差值</span><br>            res[index] = i - index;<br>            <span class="hljs-comment">// 更新一个去掉一个元素</span><br>            stack.<span class="hljs-title function_">pop</span>();<br>        &#125;<br>        <span class="hljs-comment">// 操作完后，将当前元素入栈，备用</span><br>        stack.<span class="hljs-title function_">push</span>(i);<br>    &#125;<br>    <span class="hljs-comment">// 所有元素遍历完了，如果栈中还有元素，栈中肯定是降序排列，并且都没有升温的可能了，其值要更新为0</span><br>    <span class="hljs-keyword">while</span> (stack.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">let</span> index = stack.<span class="hljs-title function_">pop</span>();<br>        res[index] = <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>升温数组这题其实主要考查对单调栈的运用</li><li>对栈的运用得当，则很好解</li></ul>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>经典算法题 - 接雨水</title>
    <link href="/2023/02/19/algorithm/algorithm_001/"/>
    <url>/2023/02/19/algorithm/algorithm_001/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/algorithm/algorithm_bg_001.jpeg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">经济萧条导致了移动端开发岗的减少，进而使得研发人员的竞争尤其激烈。算法，成为了面试大厂的必备条件。<br></code></pre></td></tr></table></figure><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ul><li>双指针、动态规划</li></ul><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><ul><li>给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。</li><li><img src="/img/algorithm/algorithm_001.png"></li></ul><h2 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h2><ul><li>输入：[3， 1， 2， 5， 2， 4]</li><li>输出：5</li><li>说明：如上图，数组 [3， 1， 2， 5， 2， 4] 表示柱子高度，这种情况下可以接5个单位的雨水，图中蓝色部分。</li></ul><h2 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h2><ul><li>输入：[4, 5, 1, 3, 2]</li><li>输出：2</li></ul><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ul><li>这是典型的双针对问题。左指针指向左边，右指针指向右边。</li><li>计算每一列可以存储的水量，这必然要有一个最值，减去当前格子的存水量，这个存水量最后要累加。</li><li>如果左指针小，右指针向右移动，否则右指针向左移动，直到两指针相邻或相遇</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 接雨水问题</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">solution</span>(<span class="hljs-params">arr</span>) &#123;<br>    <span class="hljs-comment">// 双指针，一左一右</span><br>    <span class="hljs-keyword">let</span> l = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">let</span> r = arr.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>;<br>    <span class="hljs-comment">// 左右的最值</span><br>    <span class="hljs-keyword">let</span> maxL = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">let</span> maxR = <span class="hljs-number">0</span>;<br>    <span class="hljs-comment">// 结果</span><br>    <span class="hljs-keyword">let</span> res = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (l &lt; r) &#123;<br>        <span class="hljs-comment">// 左边的小</span><br>        <span class="hljs-keyword">if</span> (arr[l] &lt; arr[r]) &#123;<br>            <span class="hljs-comment">// 比最值小则需要累加存水量</span><br>            <span class="hljs-keyword">if</span> (arr[l] &lt; maxL) &#123;<br>                res += maxL - arr[l];<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-comment">// 否则替换最值</span><br>                maxL = arr[l];<br>            &#125;<br>            <span class="hljs-comment">// 左边的小则左指针向右移动</span><br>            l++;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">// 右边同理</span><br>            <span class="hljs-keyword">if</span> (arr[r] &lt; maxR) &#123;<br>                res += maxR - arr[r];<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                maxR = arr[r];<br>            &#125;<br>            r--;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>接雨水问题是字节最爱问的题，说是难度为困难，但其实根本达不到困难的级别</li><li>掌握好双指针的思路，其实很好解。</li></ul>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac系统安装Maven私服</title>
    <link href="/2022/12/12/maven/maven_001/"/>
    <url>/2022/12/12/maven/maven_001/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/maven/maven_bg_001.jpeg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">事实上，Maven私有库的搭建一般归属后端人员来操作。<br><br>但在小公司这些知识需要移动端开发人员甚至项目经理来处理。<br></code></pre></td></tr></table></figure><h2 id="一、Maven-私服介绍"><a href="#一、Maven-私服介绍" class="headerlink" title="一、Maven 私服介绍"></a>一、Maven 私服介绍</h2><ul><li>私服是指架设在局域网的一种特殊的远程仓库，目的是代理远程仓库及部署第三方组件。</li><li>当 <code>Maven</code> 需要下载组件时，直接向其私服发起请求。</li><li>若 <code>Maven</code> 私服上存在则下载到本地仓库；否则，私服请求外部的远程仓库</li></ul><h2 id="二、通过终端命令安装"><a href="#二、通过终端命令安装" class="headerlink" title="二、通过终端命令安装"></a>二、通过终端命令安装</h2><h3 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h3><ul><li>如图，终端输入 <code>brew install nexus</code>。</li><li>如果提示没有 <code>brew</code> 命令需要先安装 <code>brew</code>。</li></ul><p><img src="/img/maven/maven_001.jpg"></p><ul><li>很明显，在 <code>M1</code> 系列芯片的机器上，这种方式安装失败了（本台电脑的芯片是 <code>M1 Pro</code>）。</li></ul><h3 id="2、启动"><a href="#2、启动" class="headerlink" title="2、启动"></a>2、启动</h3><ul><li>终端输入 <code>brew services start nexus</code> 启动 <code>Maven</code>。</li><li>在浏览器打开 <code>127.0.0.1:8081/nexus</code></li><li>默认账号密码为 <code>admin/admin123</code></li></ul><h2 id="三、通过-Nexus-安装"><a href="#三、通过-Nexus-安装" class="headerlink" title="三、通过 Nexus 安装"></a>三、通过 Nexus 安装</h2><h3 id="1、下载-Nexus"><a href="#1、下载-Nexus" class="headerlink" title="1、下载 Nexus"></a>1、下载 Nexus</h3><ul><li>传送门：<a href="http://www.sonatype.com/download-oss-sonatype%E3%80%82">http://www.sonatype.com/download-oss-sonatype。</a></li><li>很慢，要用梯子。</li><li>下载完成后，解压文件夹放在指定目标。</li></ul><h3 id="2、启动-1"><a href="#2、启动-1" class="headerlink" title="2、启动"></a>2、启动</h3><ul><li>在终端输入 <code>nexus-3.42.0-01/bin/nexus start</code></li><li>在浏览器输入 <code>http://localhost:8081/</code> 即可打开 <code>Maven</code> 页面，如下图</li><li>首次登录的账号为 <code>admin</code>，密码为一串随机密码，可以通过登录页的提示，打开指定文件看到，很长。</li></ul><p><img src="/img/maven/maven_002.jpg"></p><h3 id="3、其他命令"><a href="#3、其他命令" class="headerlink" title="3、其他命令"></a>3、其他命令</h3><ul><li>启动服务 <code>./nexus start</code></li><li>查看状态 <code>./nexus status</code></li><li>停止服务 <code>./nexus stop</code></li></ul><h2 id="四、Maven-仓库说明"><a href="#四、Maven-仓库说明" class="headerlink" title="四、Maven 仓库说明"></a>四、Maven 仓库说明</h2><h3 id="1、仓库说明"><a href="#1、仓库说明" class="headerlink" title="1、仓库说明"></a>1、仓库说明</h3><table><thead><tr><th align="left">仓库</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">maven-central</td><td align="left">maven中央库，默认从<a href="https://repo1.maven.org/maven2/%E6%8B%89%E5%8F%96jar">https://repo1.maven.org/maven2/拉取jar</a></td></tr><tr><td align="left">maven-public</td><td align="left">仓库分组，把上面三个仓库组合在一起对外提供服务，在本地maven基础配置settings.xml或项目pom.xml中使用</td></tr><tr><td align="left">maven-releases</td><td align="left">私库发行版jar，初次安装请将Deployment policy设置为Allow redeploy</td></tr><tr><td align="left">maven-snapshots</td><td align="left">私库快照（调试版本）jar</td></tr></tbody></table><h3 id="2、仓库类型"><a href="#2、仓库类型" class="headerlink" title="2、仓库类型"></a>2、仓库类型</h3><table><thead><tr><th align="left">仓库</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">Group</td><td align="left">这是一个仓库聚合的概念，用户仓库地址选择Group的地址，即可访问Group中配置的，用于方便开发人员自己设定的仓库。maven-public就是一个Group类型的仓库，内部设置了多个仓库，访问顺序取决于配置顺序，3.x默认Releases，Snapshots， Central，当然你也可以自己设置</td></tr><tr><td align="left">Hosted</td><td align="left">私有仓库，内部项目的发布仓库，专门用来存储我们自己生成的jar文件</td></tr><tr><td align="left">3rd party</td><td align="left">未发布到公网的第三方jar (3.x去除了)</td></tr><tr><td align="left">Snapshots</td><td align="left">本地项目的快照仓库</td></tr><tr><td align="left">Releases</td><td align="left">本地项目发布的正式版本</td></tr><tr><td align="left">Proxy</td><td align="left">代理类型，从远程中央仓库中寻找数据的仓库（可以点击对应的仓库的Configuration页签下Remote Storage属性的值即被代理的远程仓库的路径），如可配置阿里云maven仓库</td></tr><tr><td align="left">Central</td><td align="left">中央仓库</td></tr><tr><td align="left">Apache Snapshots</td><td align="left">Apache专用快照仓库(3.x去除了)</td></tr></tbody></table><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><ul><li>这里有一份更加详细的步骤说明：</li><li><a href="https://blog.csdn.net/liaowenxiong/article/details/122598964">https://blog.csdn.net/liaowenxiong/article/details/122598964</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
      <category>Maven</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android、Maven</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>无处不在的感冒</title>
    <link href="/2022/12/06/life/life_001/"/>
    <url>/2022/12/06/life/life_001/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/life/life_bg_001.jpeg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs">代码写得再好也解决不了感冒的问题。<br><br>这不，天气一转凉，身子立马吃不消了，感冒了。<br><br>今天主要聊一聊感冒的划分。<br></code></pre></td></tr></table></figure><h2 id="中医"><a href="#中医" class="headerlink" title="中医"></a>中医</h2><ul><li>感冒了第一时间想到的是去药店买药。</li><li>店里的伙计会根据感冒症状推荐给你风寒感冒和风热感冒药。</li></ul><h4 id="风寒感冒"><a href="#风寒感冒" class="headerlink" title="风寒感冒"></a>风寒感冒</h4><ul><li>风寒感冒是指感受风寒之邪引发。(何为 <code>风寒之邪</code> ? 反正我是看不懂)</li><li>常见的症状有鼻塞、流清鼻涕、打喷嚏、怕冷比较重、发热比较轻、咽痒、咳嗽以及咳白稀痰、舌淡红、苔薄白等</li><li>治疗方法主要是宣肺解表、祛风散寒，比如黄金败毒散、正柴胡颗粒麻黄汤、桂枝汤、感冒清热颗粒疏散风寒等</li></ul><h4 id="风热感冒"><a href="#风热感冒" class="headerlink" title="风热感冒"></a>风热感冒</h4><ul><li>风热感冒是由感受风热之邪引起。(何为 <code>风热之邪</code> ? 反正我是看不懂)</li><li>常见的症状有鼻塞、流黄脓鼻涕、咽喉肿痛、发热比较重、怕冷比较轻、咳嗽、咳黄黏痰，痰黏稠，不容易咳出来，以及小便黄、大便干、舌淡红、苔薄黄等</li><li>治疗上用银翘散加减，或者连花清瘟胶囊、金花清感颗粒等具有疏散风热、解表功效的药物进行治疗</li></ul><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><ul><li>不管是 <code>风寒之邪</code> 还是 <code>风热之邪</code>，我都看不懂，说了等于白说。</li><li>另外，<code>鼻塞</code> 和 <code>咳嗽</code> 等多个症状一样的，怎么分也分不出来。</li><li>按我个人理解，<code>风寒</code> 是轻度感冒，后期会自动转为 <code>风热</code>。</li></ul><h2 id="西医"><a href="#西医" class="headerlink" title="西医"></a>西医</h2><ul><li>感冒如果吃药两天都没好，大部分人都会向医院跑吧，反正我是这样。</li><li>到了三甲医院，挂号等叫号，叫到了2话不说，先让你抽一管血化验。</li><li>等化验单出来，医生随便看看，稍微问一下情况就给开药了。</li><li>这时你会发现，医生根本不管你是什么 <code>风寒</code> 还是 <code>风热</code>，只会写 <code>急性上呼吸道感染</code>。</li><li>事实上，<code>急性上呼吸道感染</code> 也有许多门道，分为了 <code>病毒型</code> 和 <code>细菌型</code>。</li></ul><h4 id="病毒型和细菌型"><a href="#病毒型和细菌型" class="headerlink" title="病毒型和细菌型"></a>病毒型和细菌型</h4><ul><li>事实上，<code>80%</code> 左右的 <code>上呼吸道感染</code> 为 <code>病毒型</code></li><li>血常规 <code>白细胞正常或是下降</code>，则为 <code>病毒型</code>。反之，<code>白细胞增高</code> 和 <code>中性粒细胞增高</code>，则为 <code>细菌型</code>。</li><li><code>咽部明显充血</code>、<code>扁桃体有脓性分泌物</code> 则会细菌型。</li></ul><h4 id="急性上呼吸道感染诱发因素"><a href="#急性上呼吸道感染诱发因素" class="headerlink" title="急性上呼吸道感染诱发因素"></a>急性上呼吸道感染诱发因素</h4><ul><li>淋雨、受凉、气候突变、过度疲劳</li><li>贫血、维生素A、D缺乏等</li><li>老年、体弱、幼儿等免疫功能低下</li><li>慢性呼吸道疾病患者</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>不管是 <code>风寒</code> 还是 <code>风热</code>，<code>病毒型</code> 还是 <code>细菌型</code>，早点好起来才是王道。</li><li>现在疫情严重，感冒都会担心是否为 <code>阳性</code>。</li><li>希望快快好起来吧。</li></ul>]]></content>
    
    
    <categories>
      
      <category>程序人生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序人生</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android动态更换ICON方案</title>
    <link href="/2022/12/02/android/android_001/"/>
    <url>/2022/12/02/android/android_001/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/android/android_bg_001.jpeg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stata">细心的用户会发现，一到某些节日如双11，某些网购平台的<span class="hljs-keyword">App</span>会自动更换其Logo。<br><br>事实上这是一个很古老的技术点，但如果控制不好，会带来一定的风险。<br><br>本人在年末便有一个这样的需求，需要在过年期间自动更换为新年Logo<br></code></pre></td></tr></table></figure><h2 id="1、技术原理"><a href="#1、技术原理" class="headerlink" title="1、技术原理"></a>1、技术原理</h2><ul><li>技术原理很简单，就是给App配置多个入口，然后通过 <code>enabled</code> 属性来控制入口的显示和隐藏。</li><li>一种方案是配置多个入口 <code>Activity</code>。</li><li>另一种方案是给 <code>Activity</code> 配置 <code>&lt;activity-alias&gt;</code>，这和第一种方案类似，但又有不同。</li></ul><h2 id="2、activity-alias-方案"><a href="#2、activity-alias-方案" class="headerlink" title="2、activity-alias 方案"></a>2、activity-alias 方案</h2><h3 id="2-1、配置桌面入口"><a href="#2-1、配置桌面入口" class="headerlink" title="2.1、配置桌面入口"></a>2.1、配置桌面入口</h3><ul><li>以下为 <code>AndroidManifest.xml</code> 中的代码片段：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 原 ICON 对应的 Activity --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">activity</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;.SplashActivity&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:enabled</span>=<span class="hljs-string">&quot;true&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:exported</span>=<span class="hljs-string">&quot;true&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:icon</span>=<span class="hljs-string">&quot;@mipmap/ic_launcher&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:theme</span>=<span class="hljs-string">&quot;@style/AppLauncherTheme&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">category</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">activity</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 节日 ICON --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">activity-alias</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;.Special&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:enabled</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:exported</span>=<span class="hljs-string">&quot;true&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:icon</span>=<span class="hljs-string">&quot;@mipmap/ic_festival&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:targetActivity</span>=<span class="hljs-string">&quot;.SplashActivity&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:theme</span>=<span class="hljs-string">&quot;@style/AppLauncherTheme&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">category</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">activity-alias</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>从代码中可以看出，我们从 <code>Launcher</code> 启动的是 <code>SplashActivity</code>。</li><li>通过 <code>activity-alias</code> 配置了一个 <code>Special</code> 代作为活动时的入口，其对应的 <code>android:targetActivity</code> 仍然是原来的 <code>SplashActivity</code></li><li>由于配置了 <code>android:enabled=&quot;false&quot;</code>，故在桌面上只会显示一个图标。</li></ul><h3 id="2-2、代码调用"><a href="#2-2、代码调用" class="headerlink" title="2.2、代码调用"></a>2.2、代码调用</h3><ul><li>在节日触发的地方需要更换对应的图标。</li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs Kotlin"><span class="hljs-keyword">val</span> pm = packageManager<br><span class="hljs-keyword">val</span> sp = getSharedPreferences(<span class="hljs-string">&quot;logo_special&quot;</span>, MODE_PRIVATE)<br><span class="hljs-keyword">val</span> isSpecial = sp.getString(<span class="hljs-string">&quot;isSpecial&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br><span class="hljs-keyword">val</span> componentDefault = ComponentName(packageName, <span class="hljs-string">&quot;<span class="hljs-variable">$packageName</span>.SplashActivity&quot;</span>)<br><span class="hljs-keyword">val</span> componentSpecial = ComponentName(packageName, <span class="hljs-string">&quot;<span class="hljs-variable">$packageName</span>.Special&quot;</span>)<br><span class="hljs-keyword">if</span> (isSpecial != <span class="hljs-literal">null</span> &amp;&amp; isSpecial.isNotEmpty()) &#123;<br>  Log.i(tag, <span class="hljs-string">&quot;run Special Page..&quot;</span>)<br>  <span class="hljs-keyword">if</span> (pm.getComponentEnabledSetting(componentDefault) != PackageManager.COMPONENT_ENABLED_STATE_DISABLED) &#123;<br>    pm.setComponentEnabledSetting(<br>      componentDefault,<br>      PackageManager.COMPONENT_ENABLED_STATE_DISABLED,<br>      PackageManager.DONT_KILL_APP<br>    )<br>    pm.setComponentEnabledSetting(<br>      componentSpecial,<br>      PackageManager.COMPONENT_ENABLED_STATE_ENABLED,<br>      PackageManager.DONT_KILL_APP<br>    )<br>  &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>  Log.i(tag, <span class="hljs-string">&quot;run Default Page..&quot;</span>)<br>  <span class="hljs-keyword">if</span> (pm.getComponentEnabledSetting(componentSpecial) != PackageManager.COMPONENT_ENABLED_STATE_DISABLED) &#123;<br>    pm.setComponentEnabledSetting(<br>      componentSpecial,<br>      PackageManager.COMPONENT_ENABLED_STATE_DISABLED,<br>      PackageManager.DONT_KILL_APP<br>    )<br>    pm.setComponentEnabledSetting(<br>      componentDefault,<br>      PackageManager.COMPONENT_ENABLED_STATE_ENABLED,<br>      PackageManager.DONT_KILL_APP<br>    )<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>通过 <code>pm.setComponentEnabledSetting(component)</code> 来设置某一个 <code>Activity</code> 的 <code>android:enabled</code> 为 <code>true</code> 和 <code>false</code></li></ul><h2 id="3、风险点"><a href="#3、风险点" class="headerlink" title="3、风险点"></a>3、风险点</h2><h3 id="3-1、App自动退出"><a href="#3-1、App自动退出" class="headerlink" title="3.1、App自动退出"></a>3.1、App自动退出</h3><ul><li>通过调用该代码会发现，在切换 <code>Icon</code> 时会主动退出 App，且没有任何报错。</li><li>切换图标需要时间，大部分机型只需要3秒，某为的机型需要10秒。</li><li>切换图标的过程中，如果点击图标，无法正常打开 App，会提示应用未安装。</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">提示: 针对自动退出问题，可以采用在程序退出或在后台时，进行Icon切换。</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>flutter</category>
      
      <category>Android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android、flutter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Flutter插件开发之折叠屏适配</title>
    <link href="/2022/12/01/flutter/flutter_003/"/>
    <url>/2022/12/01/flutter/flutter_003/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/flutter/flutter_bg_03.jpeg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-number">1</span>、最近在做 Flutter 插件开发时，需要判断是否为折叠屏。<br><br><span class="hljs-number">2</span>、折叠屏的开发主要集中在 <span class="hljs-keyword">Android </span>原生端的开发<br></code></pre></td></tr></table></figure><h2 id="1、Jetpack-WindowManager"><a href="#1、Jetpack-WindowManager" class="headerlink" title="1、Jetpack WindowManager"></a>1、Jetpack WindowManager</h2><ul><li>Jetpack WindowManager 中的 <code>WindowInfoTracker</code> 接口可以获取到折叠屏相关数据。</li><li><code>WindowInfoTracker</code> 接口的 <code>windowLayoutInfo()</code> 方法返回一个数据流，该数据流内部包含了折叠屏的当前状态。</li><li>WindowManager 可以通过  <code>Kotlin Flow</code> 和 <code>Java</code> 回调两种方案来采集数据。</li><li>需要引用的包:</li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle">implementation <span class="hljs-string">&quot;androidx.window:window:1.0.0&quot;</span><br>implementation <span class="hljs-string">&quot;androidx.window:window-java:1.0.0&quot;</span><br>implementation <span class="hljs-string">&#x27;androidx.lifecycle:lifecycle-runtime-ktx:2.5.1&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="2、Kotlin-Flow"><a href="#2、Kotlin-Flow" class="headerlink" title="2、Kotlin Flow"></a>2、Kotlin Flow</h2><ul><li>在采集数据时，可以采用 <code>生命周期感知协程</code>，</li><li>当生命周期处于 <code>STARTED</code> 时，执行 <code>repeatOnLifecycle</code> 方法。</li><li>当生命周期为 <code>STOPPED</code> 停止执行。以下为代码：</li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs Kotlin"><span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">initFoldingFeature</span><span class="hljs-params">()</span></span> &#123;<br>  lifecycleScope.launch(Dispatchers.Main) &#123;<br>    lifecycle.repeatOnLifecycle(Lifecycle.State.STARTED) &#123;<br>      WindowInfoTracker.getOrCreate(<span class="hljs-keyword">this</span><span class="hljs-symbol">@MainActivity</span>)<br>        .windowLayoutInfo(<span class="hljs-keyword">this</span><span class="hljs-symbol">@MainActivity</span>)<br>        .collect &#123; <span class="hljs-keyword">data</span> -&gt;<br>          <span class="hljs-keyword">val</span> feature = <span class="hljs-keyword">data</span>.displayFeatures<br>            .filterIsInstance&lt;FoldingFeature&gt;()<br>            .firstOrNull()<br>          LogUtils.i(<span class="hljs-string">&quot;-------- data: <span class="hljs-variable">$data</span>, feature: <span class="hljs-variable">$feature</span>&quot;</span>)<br>          <span class="hljs-keyword">when</span> &#123;<br>            isHalfOpen(feature) -&gt; sendToFlutter(<span class="hljs-string">&quot;屏幕半开&quot;</span>)<br>            isFlat(feature) -&gt; sendToFlutter(<span class="hljs-string">&quot;完全打开&quot;</span>)<br>            <span class="hljs-keyword">else</span> -&gt; sendToFlutter(<span class="hljs-string">&quot;主屏显示&quot;</span>)<br>          &#125;<br>        &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">sendToFlutter</span><span class="hljs-params">(state: <span class="hljs-type">String</span>)</span></span> &#123;<br>  textView.text = state<br>&#125;<br><br><span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">isHalfOpen</span><span class="hljs-params">(feature: <span class="hljs-type">FoldingFeature</span>?)</span></span>: <span class="hljs-built_in">Boolean</span> &#123;<br>  <span class="hljs-keyword">return</span> feature?.state == FoldingFeature.State.HALF_OPENED<br>&#125;<br><br><span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">isFlat</span><span class="hljs-params">(feature: <span class="hljs-type">FoldingFeature</span>?)</span></span>: <span class="hljs-built_in">Boolean</span> &#123;<br>  <span class="hljs-keyword">return</span> feature?.state == FoldingFeature.State.FLAT<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3、Java-回调"><a href="#3、Java-回调" class="headerlink" title="3、Java 回调"></a>3、Java 回调</h2><ul><li>Java 回调必须要引入 <code>androidx.window:window-java</code> 包。</li><li>通过 <code>WindowInfoTrackerCallbackAdapter</code> 来注册和注销相关回调</li><li>以下为代码：</li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs Kotlin">  <span class="hljs-keyword">private</span> <span class="hljs-keyword">lateinit</span> <span class="hljs-keyword">var</span> windowTrack: WindowInfoTrackerCallbackAdapter<br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">val</span> callback = LayoutStateChangeCallback()<br>  <br>  <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">initTrackAdapter</span><span class="hljs-params">()</span></span> &#123;<br>    windowTrack = WindowInfoTrackerCallbackAdapter(WindowInfoTracker.getOrCreate(<span class="hljs-keyword">this</span>))<br>  &#125;<br>  <br>  <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onStart</span><span class="hljs-params">()</span></span> &#123;<br>    <span class="hljs-keyword">super</span>.onStart()<br>    windowTrack.addWindowLayoutInfoListener(<span class="hljs-keyword">this</span>, Runnable::run, callback)<br>  &#125;<br>  <br>  <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onStop</span><span class="hljs-params">()</span></span> &#123;<br>    <span class="hljs-keyword">super</span>.onStop()<br>    LogUtils.i(<span class="hljs-string">&quot;onStop.. &quot;</span>)<br>    windowTrack.removeWindowLayoutInfoListener(callback)<br>  &#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">LayoutStateChangeCallback</span> : <span class="hljs-type">Consumer</span>&lt;<span class="hljs-type">WindowLayoutInfo</span>&gt; &#123;<br>  <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">accept</span><span class="hljs-params">(info: <span class="hljs-type">WindowLayoutInfo</span>)</span></span> &#123;<br>    LogUtils.i(<span class="hljs-string">&quot;accept.. info: <span class="hljs-variable">$info</span>&quot;</span>)<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="4、RxJava-支持"><a href="#4、RxJava-支持" class="headerlink" title="4、RxJava 支持"></a>4、RxJava 支持</h2><ul><li><code>RxJava</code> 和 <code>Kotlin Flow</code> 类似，这里不再做介绍了。</li></ul><h2 id="5、参考资料："><a href="#5、参考资料：" class="headerlink" title="5、参考资料："></a>5、参考资料：</h2><ul><li><a href="https://developer.android.com/guide/topics/large-screens/make-apps-fold-aware?hl=zh-cn">https://developer.android.com/guide/topics/large-screens/make-apps-fold-aware?hl=zh-cn</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>flutter</category>
      
    </categories>
    
    
    <tags>
      
      <tag>flutter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Flutter插件中获取Activity</title>
    <link href="/2022/12/01/flutter/flutter_002/"/>
    <url>/2022/12/01/flutter/flutter_002/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/flutter/flutter_bg_02.jpeg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">1、最近在做 Flutter 插件开发时，需要判断是否为折叠屏。<br><br>2、折叠屏的监听需要用到 Activity，故写下了这篇博客。<br></code></pre></td></tr></table></figure><h2 id="1、Flutter-低版本"><a href="#1、Flutter-低版本" class="headerlink" title="1、Flutter 低版本"></a>1、Flutter 低版本</h2><ul><li><p>在低版本的 <code>Flutter</code> 中可以通过 <code>registerWith(Registrar registrar)</code> 方法获取</p></li><li><p><code>Android</code> 原生端代码:</p></li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs Kotlin"><span class="hljs-keyword">package</span> com.jiangxr.flutter_plugin<br><br><span class="hljs-keyword">import</span> android.app.Activity<br><span class="hljs-keyword">import</span> android.widget.Toast<br><span class="hljs-keyword">import</span> io.flutter.plugin.common.MethodCall<br><span class="hljs-keyword">import</span> io.flutter.plugin.common.MethodChannel<br><span class="hljs-keyword">import</span> io.flutter.plugin.common.MethodChannel.*<br><span class="hljs-keyword">import</span> io.flutter.plugin.common.PluginRegistry.Registrar<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">JPlugin</span>(registrar: Registrar) : MethodCallHandler &#123;<br><br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> activity: Activity? = <span class="hljs-literal">null</span><br><br>  <span class="hljs-keyword">init</span> &#123;<br>    activity = registrar.activity()<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">registerWith</span><span class="hljs-params">(registrar: <span class="hljs-type">Registrar</span>)</span></span> &#123;<br>    <span class="hljs-keyword">val</span> channel = MethodChannel(registrar.messenger(), <span class="hljs-string">&quot;jiang_plugin&quot;</span>)<br>    channel.setMethodCallHandler(JPlugin(registrar))<br>  &#125;<br><br>  <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onMethodCall</span><span class="hljs-params">(call: <span class="hljs-type">MethodCall</span>, result: <span class="hljs-type">Result</span>)</span></span> &#123;<br>    <span class="hljs-keyword">when</span> (call.method) &#123;<br>      <span class="hljs-string">&quot;getPlatformVersion&quot;</span> -&gt; &#123;<br>        result.success(<span class="hljs-string">&quot;Android <span class="hljs-subst">$&#123;android.os.Build.VERSION.RELEASE&#125;</span>&quot;</span>)<br>      &#125;<br>      <span class="hljs-string">&quot;showToast&quot;</span> -&gt; &#123;<br>        Toast.makeText(activity, <span class="hljs-string">&quot;Flutter 调用 Android 原生端 Toast&quot;</span>, Toast.LENGTH_SHORT).show()<br>      &#125;<br>      <span class="hljs-keyword">else</span> -&gt; &#123;<br>        result.notImplemented()<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><code>Flutter</code> 端的代码：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs Dart"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;dart:async&#x27;</span>;<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;package:flutter/services.dart&#x27;</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FlutterPlugin</span> </span>&#123;<br>  <span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> MethodChannel _channel = MethodChannel(<span class="hljs-string">&#x27;jiang_plugin&#x27;</span>);<br><br>  <span class="hljs-keyword">static</span> Future&lt;<span class="hljs-built_in">String?</span>&gt; <span class="hljs-keyword">get</span> platformVersion <span class="hljs-keyword">async</span> &#123;<br>    <span class="hljs-keyword">final</span> <span class="hljs-built_in">String?</span> version = <span class="hljs-keyword">await</span> _channel.invokeMethod(<span class="hljs-string">&#x27;getPlatformVersion&#x27;</span>);<br>    <span class="hljs-keyword">return</span> version;<br>  &#125;<br><br>  <span class="hljs-keyword">static</span> Future&lt;<span class="hljs-keyword">void</span>&gt; <span class="hljs-keyword">get</span> showToast <span class="hljs-keyword">async</span> &#123;<br>    <span class="hljs-keyword">await</span> _channel.invokeMethod(<span class="hljs-string">&#x27;showToast&#x27;</span>);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>在 <code>Flutter</code> 中调用的时候直接使用 <code>await FlutterPluginDemo.showToast();</code> 即可</li></ul><h2 id="2、Flutter-高版本"><a href="#2、Flutter-高版本" class="headerlink" title="2、Flutter 高版本"></a>2、Flutter 高版本</h2><ul><li><p>在 <code>Flutter</code> 高版本中直接通过实现 <code>ActivityAware</code> 接口拿到 <code>Activity</code></p></li><li><p>由于涉及隐私，这里只写了关键代码，代码如下：</p></li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs Kotlin"><span class="hljs-keyword">package</span> com.jiangxr.flutter_plugin<br><br><span class="hljs-keyword">import</span> android.app.Activity<br><span class="hljs-keyword">import</span> io.flutter.embedding.engine.plugins.activity.ActivityAware<br><span class="hljs-keyword">import</span> io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding<br><span class="hljs-keyword">import</span> io.flutter.plugin.common.MethodCall<br><span class="hljs-keyword">import</span> io.flutter.plugin.common.MethodChannel.*<br><span class="hljs-keyword">import</span> java.lang.ref.WeakReference<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">XPlugin</span> : <span class="hljs-type">MethodCallHandler</span>, <span class="hljs-type">ActivityAware</span> &#123;<br><br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> mActivity: WeakReference&lt;Activity&gt;? = <span class="hljs-literal">null</span><br><br>  <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onMethodCall</span><span class="hljs-params">(call: <span class="hljs-type">MethodCall</span>, result: <span class="hljs-type">Result</span>)</span></span> &#123;<br>    TODO(<span class="hljs-string">&quot;Not yet implemented&quot;</span>)<br>  &#125;<br><br>  <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onAttachedToActivity</span><span class="hljs-params">(binding: <span class="hljs-type">ActivityPluginBinding</span>)</span></span> &#123;<br>    mActivity = WeakReference(binding.activity)<br>  &#125;<br><br>  <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onDetachedFromActivityForConfigChanges</span><span class="hljs-params">()</span></span> &#123;<br>    TODO(<span class="hljs-string">&quot;Not yet implemented&quot;</span>)<br>  &#125;<br><br>  <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onReattachedToActivityForConfigChanges</span><span class="hljs-params">(binding: <span class="hljs-type">ActivityPluginBinding</span>)</span></span> &#123;<br>    TODO(<span class="hljs-string">&quot;Not yet implemented&quot;</span>)<br>  &#125;<br><br>  <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onDetachedFromActivity</span><span class="hljs-params">()</span></span> &#123;<br>    mActivity = <span class="hljs-literal">null</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><ul><li>由于现阶段的 <code>Flutter</code> 版本一般都是2.x或3.x以上了，故基本上都用的第二种方案</li></ul>]]></content>
    
    
    <categories>
      
      <category>flutter</category>
      
    </categories>
    
    
    <tags>
      
      <tag>flutter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Flutter插件开发</title>
    <link href="/2022/11/30/flutter/flutter_001/"/>
    <url>/2022/11/30/flutter/flutter_001/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/flutter/flutter_bg_01.jpeg"></p><h2 id="1、创建Package"><a href="#1、创建Package" class="headerlink" title="1、创建Package"></a>1、创建Package</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">flutter create <span class="hljs-attr">--org</span> com<span class="hljs-selector-class">.jiangxr</span> <span class="hljs-attr">--template</span>=plugin <span class="hljs-attr">--platforms</span>=android,ios -<span class="hljs-selector-tag">a</span> kotlin -<span class="hljs-selector-tag">i</span> swift flutter_plugin<br></code></pre></td></tr></table></figure><ul><li><p>解析:</p></li><li><p>用 <code>Flutter</code> 创建一个包名为 <code>com.jiangxr.flutter_plugin</code> 的插件库</p></li><li><p>其中平台信息为 <code>android</code> 和 <code>ios</code>，语言分别为 <code>kotlin</code> 和 <code>swift</code></p></li></ul><h2 id="2、用-Android-Studio-打开项目"><a href="#2、用-Android-Studio-打开项目" class="headerlink" title="2、用 Android Studio 打开项目"></a>2、用 Android Studio 打开项目</h2><ul><li><p>用 Android Studio 打开刚刚创建的文件夹 <code>flutter_plugin</code></p></li><li><p>发现 <code>main.dart</code>、<code>flutter_plugin.dart</code> 显示都正常，但 <code>FlutterPlugin.kt</code> 文件不正常，很多红叉，如图:</p></li><li><p><img src="/img/flutter/flutter_001.jpg"></p></li><li><p>这时候，点击右上角的 <code>Open for Editing in Android Studio</code> 在新的窗口打开，等同步完成，即能正常进行开发</p></li></ul><h3 id="3、参考资料（官网）"><a href="#3、参考资料（官网）" class="headerlink" title="3、参考资料（官网）"></a>3、参考资料（官网）</h3><ul><li><a href="https://flutter.cn/docs/development/packages-and-plugins/developing-packages">https://flutter.cn/docs/development/packages-and-plugins/developing-packages</a></li><li><a href="https://docs.flutter.dev/development/packages-and-plugins/developing-packages#dart">https://docs.flutter.dev/development/packages-and-plugins/developing-packages#dart</a></li><li><a href="https://doc.flutterchina.club/developing-packages/#plugin">https://doc.flutterchina.club/developing-packages/#plugin</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>flutter</category>
      
    </categories>
    
    
    <tags>
      
      <tag>flutter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>胡歌和杨幂，青春的故事</title>
    <link href="/2022/11/17/reprint/reprint_004/"/>
    <url>/2022/11/17/reprint/reprint_004/</url>
    
    <content type="html"><![CDATA[<p><img src="http://bizhi.zhuoku.com/2015/05/31/bing/bing32.jpg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">本文转载自网络文章，阅读之后，深有感触，故而转载。<br><br>如作者有要求，可联系我删除。<br><br>原文链接: https:<span class="hljs-regexp">//</span>www.toutiao.com<span class="hljs-regexp">/article/</span><span class="hljs-number">7164328910371439144</span>/<br></code></pre></td></tr></table></figure><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><blockquote><p>说起杨幂很多人都不陌生，她也算是娱乐圈里的顶流了，上综艺节目的时候被问道会不会把前任当人脉，她霸气回复说：“我觉得我才是那个人脉！”</p></blockquote><p><img src="/img/reprint/04/reprint_04_01.png"></p><blockquote><p>她在娱乐圈的成长史活脱脱一部大女主戏。很多人只知道她和刘恺威闪婚，却不知她还和胡歌有一段缘！</p></blockquote><p><img src="/img/reprint/04/reprint_04_02.jpeg"></p><blockquote><p>前不久有人爆料说杨幂在大醉后亲口说自己的所有前任中最喜欢的人是胡歌，这直接将两人多年的cp粉给唤醒了，所有人都在求两人重新合作一部古装戏。</p></blockquote><blockquote><p>仔细回想两人其实已经分手10年了，不过在两人的微博依旧能找到对方当年的影子。</p></blockquote><p><img src="/img/reprint/04/reprint_04_03.jpeg"></p><blockquote><p>杨幂的粉丝都知道她的微博头像一直没有换过，09拍的一张非主流照片一直用到现在，会不会就是因为有怀念的人呢？</p></blockquote><blockquote><p>相信90后的人没有人没看过《仙剑奇侠传》，这部剧当时可以说火遍了大江南北，直到现在依旧有人说：曾经以为《仙剑奇侠传》是仙侠剧的开端，但没想到居然是顶峰。可想而知，这部剧在当时有多火。</p></blockquote><p><img src="/img/reprint/04/reprint_04_04.jpeg"></p><blockquote><p>电视剧的火爆让这部剧的演员们也一炮而红，演艺圈近十年，从来没有一部剧能像它一样几乎所有的主演都成为炙手可热的演员，杨幂、唐嫣、刘诗诗、胡歌、霍建华等人，至今依旧是娱乐圈里的常青树。</p></blockquote><p><img src="/img/reprint/04/reprint_04_05.jpeg"></p><blockquote><p>网络上之前被疯狂转发的《仙剑奇侠传》里的花絮，所有人看着一颗珠子，当“土灵珠”这句台词出来的时候，大家都忍不住笑场。细心的网友发现，所有人笑场的时候，只有杨幂第一反应是看在自己身后的胡歌，两人亲密的举动无一不在透露关系着不简单。</p></blockquote><p><img src="/img/reprint/04/reprint_04_06.gif"></p><blockquote><p>几位主演在片场被记者调侃的时候，当时的杨幂还很害羞，脸红一下就顺势躲到了胡歌的身后。从各种花絮也可以看出来几个人关系非常好，刘诗诗在片场还经常叫她“嫂子”，引人遐想。</p></blockquote><p><img src="/img/reprint/04/reprint_04_07.jpeg"></p><blockquote><p>当时他们都是刚出社会的年轻人，一部戏下来大家关系非常好，私下经常一起见面。戏拍完没多久，唐人内部组织了埃及行，杨幂不是唐人的员工却参与其中，也是从这个时候开始，胡歌和杨幂的恋情绯闻满天飞。</p></blockquote><p><img src="/img/reprint/04/reprint_04_08.jpeg"></p><blockquote><p>每个人发出来的照片中都有杨幂紧挨胡歌的照片，只要是大家在一起的合照，杨幂肯定是紧紧挨着胡歌站着的。</p></blockquote><blockquote><p>好景不长，两人的甜蜜并没有持续多久，埃及行回去几个月，胡歌和刘诗诗的公司唐人就和杨幂的公司呛起来了，已经到了必须分胜负的局面，为了赢公司逼迫胡歌在爱情和事业中做选择。</p></blockquote><p><img src="/img/reprint/04/reprint_04_09.png"></p><blockquote><p>要知道胡歌当年出车祸的时候公司不仅没有放弃他，反而在他恢复后，给他大好的资源，雪中送炭之情不能不顾。</p></blockquote><blockquote><p>刘诗诗作为唐人的一员，又是新人演员，自然要听公司的安排，于是在杨幂生命中扮演者最重要的两个角色纷纷选择了站在她的对立面。</p></blockquote><p><img src="/img/reprint/04/reprint_04_10.jpeg"></p><blockquote><p>在爱情和友情里都被备受打击的杨幂只能自己安慰自己，最后还是唐嫣主动站出来替她讲话，陪伴她度过了最困难的时光。很多人都知道唐嫣曾经是杨幂最好的朋友，毕竟婚礼只请了唐嫣一个伴娘。</p></blockquote><p><img src="/img/reprint/04/reprint_04_11.jpeg"></p><blockquote><p>其实早期和杨幂关系最好的人是刘诗诗，只不过因为公司的矛盾，两人渐行渐远了，最后沦为了点头之交。</p></blockquote><blockquote><p>后来唐嫣在出演《夏家三千金》的时候遇到渣男邱泽，人生最黑暗的时候也是在杨幂的鼓励和陪伴下才重新站起来的，有了这样深刻的经历，两个人都已经将对方当成了人生挚友。</p></blockquote><p><img src="/img/reprint/04/reprint_04_12.jpeg"></p><blockquote><p>很多人不知道当时的杨幂面临怎样的境况，事业发展不顺，公司不给她接戏，一度想要将她雪藏。</p></blockquote><blockquote><p>原本以为可以在亲近的人身上找到慰藉，却没想到胡歌的母亲极力反对两人谈恋爱，各种狠话，甚至还用绝食来威胁，不仅工作感情也面临危机。</p></blockquote><p><img src="/img/reprint/04/reprint_04_13.jpeg"></p><blockquote><p>一边是养大自己的母亲，一边是自己喜欢的人，胡歌进退两难。最后还是在母亲的步步紧逼下选择了委屈杨幂，但杨幂向来是一个直性子，她不愿意谄媚讨好，既然不喜欢她，她绝不会委屈自己。</p></blockquote><p><img src="/img/reprint/04/reprint_04_14.jpeg"></p><blockquote><p>胡歌母亲一直是一个控制欲极强的人，当年胡歌报考学校的时候原本第一志愿是北京电影学院，但是母亲不愿意他离家太远，最后让他改成了上海戏剧学院。等到胡歌工作后也没有停止对他的控制，在母亲的要求下他接工作基本以上海的为主。</p></blockquote><blockquote><p>演完仙剑的时候他母亲在医院检查出了癌症，而她看杨幂第一眼就觉得这个女孩太漂亮了，不适合做老婆，绝食让儿子分手。</p></blockquote><p><img src="/img/reprint/04/reprint_04_15.jpeg"></p><blockquote><p>胡歌自然不同意，但她时日无多，胡歌不愿看母亲在人生的最后一段时光不开心，只能表面和杨幂分手。</p></blockquote><blockquote><p>得知两人分手后她立马转变态度，开始给胡歌介绍起相亲来，小情侣的关系迅速恶化。最后在年底的时候，彻底分手了，胡歌也被杨幂彻底拉近了“黑名单”里面。当时的胡歌还比较稚嫩，发过微博质问母亲，这样做她最后真的开心吗？</p></blockquote><p><img src="/img/reprint/04/reprint_04_16.jpeg"></p><blockquote><p>在1月8号这个日子，胡歌发了一条看起来十分悲伤的微博，内容写的是：初见时，她说相遇恨晚，分开时，他说相爱恨早。</p></blockquote><blockquote><p>这句话饱含深意，明眼人都能看出来这是一条分手微博。没多久杨幂也紧随其后发了一条微博，内容是累了就放下。</p></blockquote><blockquote><p>胡歌的微博里配了一张图片，图片里是一棵“胡杨树”，这不得不引人遐想，难不成两人分手了？</p></blockquote><p><img src="/img/reprint/04/reprint_04_17.jpeg"></p><blockquote><p>事实证明，网友的猜测并没有错，因为从这之后再也没有看见过两人的互动了，杨幂还取消了对胡歌的微博关注，后来即使出席活动遇到了，两人也是隔很远，最熟悉的陌生人不过如此。</p></blockquote><p><img src="/img/reprint/04/reprint_04_18.jpeg"></p><blockquote><p>杨幂是一个不愿服输的人，分手了就一别两宽各生欢喜。两人分手的这一年她接了很多戏，不让自己闲下来，在不断地忙碌中她才终于从上一段感情中走出来，于是她遇到了比她大12岁的刘恺威。</p></blockquote><blockquote><p>刘恺威曾经在接受采访的时候说，两个人第一次见面是在剧组的火锅饭局上。杨幂最后才来，头发没吹干妆也没化只能看见两个水娃娃的大眼睛，从楼梯上走下来的那几秒，他就对她一见钟情了。</p></blockquote><p><img src="/img/reprint/04/reprint_04_19.jpeg"></p><blockquote><p>于是他就对她展开了追求，相比于同龄的胡歌，刘恺威身上散发着成熟男人的魅力，遇事不会犹豫，很有自己的想法，显然十分适合事业心强的杨幂。</p></blockquote><blockquote><p>和胡歌在一起的时候，虽然也有过快乐的时光，但更像两个人一起过家家。而刘恺威不一样，他的成熟和体贴让杨幂十分有安全感，很快两人就在一起了。</p></blockquote><p><img src="/img/reprint/04/reprint_04_20.png"></p><blockquote><p>次年两人决定向大众公开恋情，但是选择的时间很微妙，杨幂和胡歌当时分手的时间是1月8号，两人公开恋情也选在了这一天。</p></blockquote><p><img src="/img/reprint/04/reprint_04_21.png"></p><blockquote><p>很多网友猜测杨幂此举是不是故意的，还有网友觉得用现任报复前任这种戏码是不是太俗气，最后这个话题不了了之。</p></blockquote><blockquote><p>让所有人觉得杨幂就是为了报复胡歌的事发生在2014年，也是在1月8号，杨幂突然公布了婚训，难不成她和这个数字杠上了？</p></blockquote><p><img src="/img/reprint/04/reprint_04_22.png"></p><blockquote><p>不仅如此，在她的婚礼上，除了唐嫣没有请任何相熟的人，刘诗诗早已不在她的好友列表里了，这件事颇有些君子报仇十年不晚的意思。</p></blockquote><p><img src="/img/reprint/04/reprint_04_23.jpeg"></p><blockquote><p>虽然没有接到杨幂的邀请，胡歌得知她结婚了，依旧在微博上送上了祝福，不过杨幂一直没有回复。细心的网友还发现了一个很重要的细节，胡歌祝福下配的图片是两人当年在一起的时候养的猫。一时之间让人有些唏嘘，曾经我们是最亲密的人，如今却只能以旁观者的身份向你送上祝福。</p></blockquote><p><img src="/img/reprint/04/reprint_04_24.png"></p><blockquote><p>不仅如此，胡歌没有缺席杨幂的每一个人生大事，半年后杨幂生下了女儿糯米，胡歌得知也是第一时间转发送了祝福，同上次一样，杨幂依旧没有回复。</p></blockquote><p><img src="/img/reprint/04/reprint_04_25.png"></p><blockquote><p>这其实也从侧面说明杨幂其实并没有真正放下，因为真正的放下是会愿意和过去的感情以及过去的人和解的。</p></blockquote><blockquote><p>两人虽然没有了联系，胡歌却一直在默默关注杨幂的动态，看着她发展得越来越高，胡歌也是打心底里为她高兴。所谓人红是非多，杨幂在被网络上的艳门照和视频卷进舆论的漩涡的时候，胡歌第一时间转发相关动态力挺她。</p></blockquote><p><img src="/img/reprint/04/reprint_04_26.jpeg"></p><blockquote><p>他终于做到了坚定地站在她的身边，但一切已经太晚了，两个人已经遗憾错过。在一次颁奖晚会上，台下坐着各大候选者，胡歌和杨幂也是其中一员，两人当年也是观众追到热门剧里的大热cp。</p></blockquote><blockquote><p>主持人在采访杨幂的时候问到了胡歌的近况，没想到这个问题让一向以高情商出名的杨幂也有了半分迟疑，随后她很快反应过来转移了话题，坐在台下的胡歌本人也很紧张，眉毛紧皱神色惆怅。</p></blockquote><p><img src="/img/reprint/04/reprint_04_27.jpeg"></p><blockquote><p>活动结束后，记者抓着杨幂不放又问她，这次和胡歌见面有没有好好打招呼，将来还会不会合作？</p></blockquote><blockquote><p>大有不让走的架势。迫于形势杨幂只好回答记者的问题，她说“大家都是好朋友，肯定会好好打招呼啊。”</p></blockquote><p><img src="/img/reprint/04/reprint_04_28.gif"></p><blockquote><p>谨慎回答了前一句，却对后面一句避而不谈，并且正常人一听就知道这句话是场面话，两人见面从来不同框，即使被活动现场的主持人叫到了也会尽量避免出现在一个画面里，哪来的好好打招呼一说？</p></blockquote><blockquote><p>两人的关系似乎成为了某种禁忌，接受媒体的采访的时候羊毛被问到会不会和胡歌搭档的时候，她下意识说了一句“够狠”，两人依旧没有破冰。</p></blockquote><p><img src="/img/reprint/04/reprint_04_29.png"></p><blockquote><p>很多年后敢爱敢恨、是非分明的杨幂甚至已经原谅了刘诗诗当年对自己的背叛，在活动上遇见了能够打一声招呼。</p></blockquote><blockquote><p>对胡歌依旧是能避则避，两人关系真正得到缓解是在2015年，这一年是两个人事业发展的转折点，杨幂进军影视圈，拍起了电影。</p></blockquote><p><img src="/img/reprint/04/reprint_04_30.jpeg"></p><blockquote><p>而胡歌一部《琅琊榜》占据了榜首，成为了年度组后欢迎的电视剧。</p></blockquote><blockquote><p>初次进入影视圈的杨幂心情比较忐忑，电影首映的时候工作室人员邀请了胡歌，不过他忙得不可开交，错过了首映时间。</p></blockquote><blockquote><p>为了弥补他主动提及发微博帮杨幂宣传，文案内容也颇为有趣，公开喊话：既然要我帮忙宣传，是不是应该先关注我一下？</p></blockquote><p><img src="/img/reprint/04/reprint_04_31.jpeg"></p><blockquote><p>话已经说到这个份上，杨幂不关注倒显得有些不是好歹，于是时隔多年，她又重新关注了胡歌的微博。之后两人甚至能在评论里互相调侃对方几句，不少网友看到觉得很感叹，两人似乎又回到了当年的状态。</p></blockquote><blockquote><p>从这之后两人不在避讳在活动中见面，15年时尚周年庆典，两人都是受邀嘉宾去参加红毯仪式，于是不可避免的在后台撞见了。</p></blockquote><p><img src="/img/reprint/04/reprint_04_32.gif"></p><blockquote><p>杨幂一直是一个拿得起放得下的人，即使内心不情愿，面上也不会显露出来，她选择了大方与胡歌合照。</p></blockquote><blockquote><p>虽然不是两个人单独同框，但这张照片还是让很多当年的歌幂党激动无比，当年那批看仙剑的小孩已经长大了，纷纷评论：死去的回忆突然攻击我！不过已经过去了这么多年，早就已经物是人非。</p></blockquote><p><img src="/img/reprint/04/reprint_04_33.jpeg"></p><blockquote><p>如今两人是娱乐圈里极具话题度的人物，一言一行都会被观众和粉丝放大，更不可能像从前一样谈天说地，更多的是工作上的联系。不过两人也算是拥有一段美好的回忆，只不过到最后选择了不一样的路。</p></blockquote><p><img src="/img/reprint/04/reprint_04_34.png"></p><blockquote><p>杨幂说自己是一个不喜欢回头的人，过去的就是过去了，无论好坏都无所谓，最重要的是向前看，前面一定有足够吸引人的风景。</p></blockquote><blockquote><p>每个人有每个人的坚守，两个人如今已经有了各自的生活，希望他们都在各自的世界里闪闪发光！</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>程序人生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序人生</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redux 之 Middleware 及 Flutter Redux 介绍</title>
    <link href="/2022/11/03/redux/redux_002/"/>
    <url>/2022/11/03/redux/redux_002/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/redux/redux_bg_01.jpeg"></p><br/><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><blockquote><p>在前一篇博客，我们介绍了 Redux 的基本概念，本次对内容进行提升。<br>传送门: <a href="https://jxr202.github.io/2022/10/27/redux/redux_001">https://jxr202.github.io/2022/10/27/redux/redux_001</a></p></blockquote><h3 id="二、概念介绍"><a href="#二、概念介绍" class="headerlink" title="二、概念介绍"></a>二、概念介绍</h3><table><thead><tr><th align="left">对象</th><th align="left">库</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left"><strong>Store</strong></td><td align="left">Redux</td><td align="left">数据集合、仓库，内部包含了 Reducer、State、Middleware</td></tr><tr><td align="left"><strong>Action</strong></td><td align="left">Redux</td><td align="left">一种用于触发 State 变化的动作或行为</td></tr><tr><td align="left"><strong>Reducer</strong></td><td align="left">Redux</td><td align="left">纯函数，约束 State 的变化，根据 Action 得出新的 State</td></tr><tr><td align="left"><strong>State</strong></td><td align="left">Redux</td><td align="left">UI 状态，不同的 State 意味着不同的 UI</td></tr><tr><td align="left"><strong>Middleware</strong></td><td align="left">Redux</td><td align="left">中间件，类似于拦截器，在 Action 到 Reducer 之前进行拦截</td></tr><tr><td align="left"><strong>StoreProvider</strong></td><td align="left">Flutter_Redux</td><td align="left">继承于 InheritedWidget，用于 Store 的注入</td></tr><tr><td align="left"><strong>StoreConnector</strong></td><td align="left">Flutter_Redux</td><td align="left">用于关联 Store 和 Widget，实现自动刷新</td></tr></tbody></table><h3 id="三、StoreProvider"><a href="#三、StoreProvider" class="headerlink" title="三、StoreProvider"></a>三、StoreProvider</h3><ul><li><p>StoreProvider 通常用于 Store 的注入，即 App 的入口的地方。</p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">void</span> <span class="hljs-title function_ invoke__">main</span>() &#123;<br>  <span class="hljs-keyword">final</span> store = Store&lt;AppState&gt;(counterReducer, initialState: <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">AppState</span>.<span class="hljs-title function_ invoke__">initState</span>());<br>  <span class="hljs-title function_ invoke__">runApp</span>(<span class="hljs-title function_ invoke__">MyApp</span>(store));<br>&#125;<br>    <br><span class="hljs-comment">/// MyApp -&gt; build()</span><br>@override<br>Widget <span class="hljs-title function_ invoke__">build</span>(BuildContext context) &#123;<br>  <span class="hljs-keyword">return</span> StoreProvider&lt;AppState&gt;(<br>    store: store,<br>    child: <span class="hljs-title function_ invoke__">MaterialApp</span>(<br>      <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;Flutter Demo&#x27;</span>,<br>      <span class="hljs-attr">theme</span>: <span class="hljs-title function_ invoke__">ThemeData</span>(<br>        <span class="hljs-attr">primarySwatch</span>: Colors.blue,<br>      ),<br>      <span class="hljs-attr">home</span>: <span class="hljs-keyword">const</span> <span class="hljs-title function_ invoke__">HomePage</span>(<span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;Flutter Demo Home Page&#x27;</span>),<br>    ),<br>  );<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="四、StoreConnector"><a href="#四、StoreConnector" class="headerlink" title="四、StoreConnector"></a>四、StoreConnector</h3><ul><li><p>StoreConnector 用于接收 Store 中的 State 变化，然后局部刷新 UI。</p></li><li><p>尽量缩小 StoreConnector 的范围，优化 UI 的绘制流程</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php">body: <span class="hljs-title function_ invoke__">Center</span>(<br>  <span class="hljs-attr">child</span>: <span class="hljs-title function_ invoke__">Column</span>(<br>    <span class="hljs-attr">mainAxisAlignment</span>: MainAxisAlignment.center,<br>    <span class="hljs-attr">children</span>: [<br>      <span class="hljs-keyword">const</span> <span class="hljs-title function_ invoke__">Text</span>(<span class="hljs-string">&#x27;You have pushed the button this many times:&#x27;</span>),<br>      StoreConnector&lt;AppState, <span class="hljs-keyword">int</span>&gt;(<br>        <span class="hljs-attr">converter</span>: (store) =&gt; store.state.count,<br>        <span class="hljs-attr">builder</span>: (context, count) &#123;<br>          <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">Text</span>(<br>            <span class="hljs-string">&#x27;$count&#x27;</span>,<br>            <span class="hljs-attr">style</span>: Theme.<span class="hljs-title function_ invoke__">of</span>(context).textTheme.displayLarge,<br>          );<br>        &#125;,<br>      ),<br>    ],<br>  ),<br>),<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>原创</category>
      
      <category>Redux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redux 基本概念</title>
    <link href="/2022/10/27/redux/redux_001/"/>
    <url>/2022/10/27/redux/redux_001/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/redux/redux_bg_01.jpeg"></p><br/><blockquote><p>Redux 官网: <a href="https://cn.redux.js.org/">https://cn.redux.js.org/</a></p></blockquote><h1 id="一、三大核心概念"><a href="#一、三大核心概念" class="headerlink" title="一、三大核心概念"></a>一、三大核心概念</h1><p><img src="/img/redux/redux_001.webp"></p><h2 id="1、Store"><a href="#1、Store" class="headerlink" title="1、Store"></a>1、Store</h2><ul><li><p><code>Store</code> 可理解为仓库、水池，用于存放数据的容器，一个应用通常只有一个 <code>Store</code>。</p><ul><li><p><code>React / JavaScript</code> 创建 <code>Store</code>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">import</span> &#123; createStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;redux&#x27;</span>;<br><br><span class="hljs-keyword">const</span> store = <span class="hljs-title function_">createStore</span>(reducers);<br></code></pre></td></tr></table></figure></li><li><p><code>Flutter / Dart</code> 创建 <code>Store</code>。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Dart"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;package:redux/redux.dart&#x27;</span>;<br>        <br><span class="hljs-keyword">final</span> store = Store&lt;AppState&gt;(reducers);<br></code></pre></td></tr></table></figure></li></ul></li><li><p>注意：不管是 <code>React</code> 还是 <code>Flutter</code> 中，创建 <code>Store</code> 时必须要传入一个函数作为参数，该函数为 <code>Reducer</code>，后边会讲到。</p></li></ul><h2 id="2、Action"><a href="#2、Action" class="headerlink" title="2、Action"></a>2、Action</h2><ul><li><p><code>Action</code> 在这里作名词，可理解为（向 <code>Store</code> 水池中打水漂的）石块。</p><ul><li><p><code>React / JavaScript</code> 中的 <code>action</code> 为一个 <code>JSON</code> 对象，该对象必须要有一个 <code>type</code> 属性，其他属性没有限制。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">const</span> add = &#123;<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;ADD&#x27;</span>,<br>  <span class="hljs-attr">val</span>: <span class="hljs-number">5</span><br>&#125;;<br><span class="hljs-keyword">const</span> dec = &#123;<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;DEC&#x27;</span>,<br>  <span class="hljs-attr">val</span>: <span class="hljs-number">1</span>,<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><code>Flutter / Dart</code> 中的 <code>action</code> 和 <code>JavaScript</code> 的用类似，但 <code>type</code> 属性不再是必须的了，这里直接使用简单的枚举来标识不同的 <code>action</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">enum</span> <span class="hljs-title class_">Actions</span> &#123;<br>  ADD, DEC,  <br>&#125;<br></code></pre></td></tr></table></figure></li></ul></li></ul><h2 id="3、Reducer"><a href="#3、Reducer" class="headerlink" title="3、Reducer"></a>3、Reducer</h2><ul><li><p>Reducer 为不包含任何逻辑的纯函数。在向水池打水漂的例子中，水池随着石块的变化而变化遵循着某种函数规律，这个函数即为 Reducer。</p></li><li><p>Reducer 作为一个函数，接收一个状态 <code>State</code> 和事件 <code>Action</code>，得到新的状态 <code>NewState</code>。</p><ul><li><code>React / JavaScript</code> 中的 <code>reducer</code> 。</li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">reducer</span> = (<span class="hljs-params">state, action</span>) =&gt; newState;<br><br><span class="hljs-comment">// 以下为一个例子</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">counterReducer</span> = (<span class="hljs-params">state = <span class="hljs-number">0</span>, action</span>) =&gt; &#123;<br>    <span class="hljs-keyword">switch</span> (action.<span class="hljs-property">type</span>) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;ADD&#x27;</span>:<br>            <span class="hljs-keyword">return</span> state + action.<span class="hljs-property">val</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;DEC&#x27;</span>:<br>            <span class="hljs-keyword">return</span> state - action.<span class="hljs-property">val</span>;<br>        <span class="hljs-attr">default</span>:<br>            <span class="hljs-keyword">return</span> state;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><code>Flutter / Dart</code> 中的 <code>reducer</code> 。</li></ul>  <figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs Dart"><span class="hljs-keyword">enum</span> Actions &#123;<br>    ADD, DEC,<br>&#125;<br><br><span class="hljs-built_in">int</span> counterReducer(<span class="hljs-built_in">int</span> state, action) &#123;<br>    <span class="hljs-keyword">switch</span> (action) &#123;<br>        <span class="hljs-keyword">case</span> Actions.ADD:<br>            <span class="hljs-keyword">return</span> state + <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">case</span> Actions.DEC:<br>            <span class="hljs-keyword">return</span> state - <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">return</span> state;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h1 id="二、几个重要方法"><a href="#二、几个重要方法" class="headerlink" title="二、几个重要方法"></a>二、几个重要方法</h1><h2 id="1、Store-的常用方法"><a href="#1、Store-的常用方法" class="headerlink" title="1、Store 的常用方法"></a>1、Store 的常用方法</h2><ul><li><p>Store.getState()</p><ul><li><p>该方法返回一个 <code>State</code>，在 <code>Redux</code> 中每一个 <code>State</code> 对应着的一种不同的 <code>UI</code> 状态。</p></li><li><p><code>React / JavaScript</code> 中获取 <code>state</code> :</p></li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">const</span> state = store.<span class="hljs-title function_">getState</span>();<br></code></pre></td></tr></table></figure><ul><li><code>Flutter / Dart</code> 中获取 <code>state</code> :</li></ul>  <figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Dart"><span class="hljs-keyword">final</span> state = store.state;<br></code></pre></td></tr></table></figure></li><li><p>Store.dispatch(action)</p><ul><li><p>可以理解为向水池 <code>Store</code> 中扔一个石块 <code>Action</code>。在该方法内部，<code>Store</code> 会根据 <code>Reducer</code> 函数生成一个新的 <code>State</code>，从而引起 <code>UI</code> 的变化。</p></li><li><p><code>React / JavaScript</code> 中的调用 :</p></li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">store.<span class="hljs-title function_">dispatch</span>(&#123;<br>    <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;ADD&#x27;</span>,<br>    <span class="hljs-attr">val</span>: <span class="hljs-number">5</span><br>&#125;);<br></code></pre></td></tr></table></figure><ul><li><code>Flutter / Dart</code> 中的调用 :</li></ul>  <figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Dart">store.dispatch(Actions.ADD);<br></code></pre></td></tr></table></figure></li><li><p>Store.subscribe(listener)</p><ul><li><p>向 <code>Store</code> 注册监听，如果 <code>Store</code> 有变化，则为回调 <code>listener</code>。</p></li><li><p><code>React / JavaScript</code> 中的调用 :</p></li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">store.<span class="hljs-title function_">subscribe</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;状态变化：&quot;</span> + store.<span class="hljs-title function_">getState</span>()));<br></code></pre></td></tr></table></figure><ul><li><code>Flutter / Dart</code> 中的调用 :</li></ul>  <figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Dart">store.onChange.listen(render)<br></code></pre></td></tr></table></figure></li></ul><h2 id="2、其他常用方法"><a href="#2、其他常用方法" class="headerlink" title="2、其他常用方法"></a>2、其他常用方法</h2><ul><li><p>combineReducers</p><ul><li><p>当业务复杂的时候，<code>Reducer</code> 函数肯定会需要拆分。当我们需要把多个 <code>Reducer</code> 函数进行联合的时候，就需要使用 <code>combineReducers</code> 了。</p></li><li><p><code>React / JavaScript</code> 中的调用 :</p></li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">const</span> appReducer = <span class="hljs-title function_">combineReducers</span>(&#123;<br>    aReducer,<br>    bReducer,<br>&#125;)<br></code></pre></td></tr></table></figure><ul><li><code>Flutter / Dart</code> 中的调用 :</li></ul>  <figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Dart"><span class="hljs-keyword">final</span> appReducer = combineReducers(<br>  aReducer,<br>  bReducer,<br>)<br></code></pre></td></tr></table></figure></li><li><p>ActionCreator</p><ul><li>为了方便创建 <code>Action</code>，可以统一的一个函数来创建 <code>Action</code>。由于 <code>Flutter</code> 中的 <code>Action</code> 较为简单，不需要通过函数来创建 <code>Action</code>，下面仅展示 <code>React</code> 中的用法。</li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">addCteator</span> = (<span class="hljs-params">value</span>) =&gt; &#123;<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;ADD&#x27;</span>,<br>        <span class="hljs-attr">val</span>: value,<br>    &#125;<br>  &#125;;<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>原创</category>
      
      <category>Redux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>&lt;转&gt;电脑城已死</title>
    <link href="/2022/10/20/reprint/reprint_003/"/>
    <url>/2022/10/20/reprint/reprint_003/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/reprint/reprint_bg_03.jpeg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">本文转载自网络文章，阅读之后，深有感触，故而转载。<br><br>如作者有要求，可联系我删除。<br><br>原文链接: https:<span class="hljs-regexp">//</span>blog.csdn.net<span class="hljs-regexp">/bjweimengshu/</span>article<span class="hljs-regexp">/details/</span><span class="hljs-number">115610171</span><br></code></pre></td></tr></table></figure><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><blockquote><p>08年那会，电脑城可是人流量超大的地方，不亚于现在任何一条网红步行街，无数直男前仆后继往那里赶，为淘到最心仪的电脑配件。</p></blockquote><blockquote><p>那时电商还不发达，笔记本电脑也不是人人有，手机最多玩个贪吃蛇，听歌还是用mp3，听的还是周杰伦的《七里香》，那会儿本人还是学生，物质虽然不丰富但精神单纯，每天好好读书就完了，没那么多996和高房价，每到周末约上同学逛一逛电脑城，什么烦恼都抛诸脑后。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/87065260b8d166893370d9cec9ac317b.png" alt="10年前的岗顶太平洋电脑城"></p><blockquote><p>那会岗顶是广州人流量最大的地方，有太平洋电脑城一二期、百脑汇、南方电脑城，一下地铁摩肩接踵，个个都是两眼放光过来淘配件的，因为客流多店主就是爷，走过去爱理不理，反正离了这再找不到品种更全、价格更便宜的，守着店就是财源滚滚。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/0f71b87d76f357562972e257d0f21eeb.png"></p><blockquote><p>那会过来还会买买光碟，老板一箱端出来哗啦一堆人在那挑，偶尔扒拉到一张封面性感的就两眼放光，金山毒霸、瑞星这些当年还是放包装盒卖的。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/12eb92292fdf2742652e3c2cf0685ece.png"></p><blockquote><p>那会藏经阁还是好游戏的代名词。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/3d2cea280d52935750d59f0a3536623e.png"></p><blockquote><p>后来呢？后来淘宝来了，京东也来了，我在京东买的笔记本电脑到现在没坏，再后来呢手机屏幕越来越大，上网也有4G了，玩游戏刷视频贼方便，家里电脑早积灰了，几年换一次手机也是去商场一楼的手机专卖店，打开京东天猫比比价然后就掏钱了，电脑城？那是个什么地方？估计现在95、00后很多都没听过这个词吧。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/7cb0f84139c87bbf457243f5e36942fc.png" alt="10年前的南方电脑城"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/6d7ca0323b5bb6cd68fe5e6771ccd505.png" alt="10年前一出岗顶地铁的盛况"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/47630b5c8eeceeea85ebd139cabae5ca.png" alt="10年前电脑城内人声鼎沸"></p><blockquote><p>如今本人老了，年纪一大就特别容易怀旧，于是想再去电脑城看看，找找青春的感觉，走出地铁不知哪个出口，路牌上找不到电脑城。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/4462094d5b6be2903a069dd1c9216ac1.png"></p><blockquote><p>随便找个出口出来，刚好是百脑汇，这冷清的街道没了当年的感觉，街口一排的店除了联想，其他都是卖手机的，地上一尘不染。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/bce03860b8d93b7ebf5d80e7825eb050.png"></p><blockquote><p>进去一看，长长的通道只有1、2个客人。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/1ec32229876a3395a438b72d372a9a14.png"></p><blockquote><p>一楼一半卖手机一半卖笔记本电脑，笔记本也只有联想、惠普和戴尔三个牌子，台式机更是看不见，记得10年前连海尔都来卖电脑，走几步店家全跑过来拉我，“买电脑吗，还是配件？过来看看吧”，我连连摆手。</p></blockquote><blockquote><p>好不容易摆脱店家，坐扶梯上二楼，这里是卖电脑配件的，一个客人都没，静悄悄，地上掉一根针都能听见。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/ec9967c88e4a1764b356aa5ea25bbbd1.png"></p><blockquote><p>说电脑配件还不如说直播配件，二楼最多的就是这种店。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/fe1bed609def65f13b11338d14a2b8ec.png"></p><blockquote><p>走近一看，麦克风、补光灯、声卡、耳机、手机支架，一条龙网红装备，随便哪个女生来了都能秒变冯提莫，我问老板为什么这个麦克风毛茸茸，老板说降噪，问了价格，199一个。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/56c99c144b5f5e31e10c93c047129413.png"></p><blockquote><p>除了直播设备的店，二楼最多的就是手机维修店了，也对，电脑手机配件上网买，维修这些还得线下，不过现在上门换屏什么的也很方便。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/76b4432377ba1f2d8a42bd2667d14c5f.png"></p><blockquote><p>好不容易在角落找到一间电脑配件店，见老板一个人孤单于是跟他聊起来，老板50上下，特别健谈，他94年入行，一开始在隔壁正佳开店，后来搬来百脑汇，我问现在生意怎样，他说：</p></blockquote><blockquote><p>“2010年这里六层都是卖电脑的，15年剩四层，如今剩三层，生意怎么样很明显了吧。”</p></blockquote><blockquote><p>他接着说：“现在谁还做这个？要感谢我们苦苦支撑才让你们有街可逛！”</p></blockquote><blockquote><p>我问怎么不开网店，他打开淘宝商家端，一看只有5个商品在售，销量零星，最多的累计80多销量的是一款鼠标垫，“电商没生意，我也不喜欢这种网上的，那些人聊来聊去又不下单，浪费我时间”。</p></blockquote><blockquote><p>老板说他是个喜欢发光发热的人，因此才跟我透露这么多信息，说完看到一个熟客过来他亲切地跟人握手。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/e09d2117ec530bef4e949bb20acf7f53.png"></p><blockquote><p>走了一圈看到墙上贴这种插卡收音机的广告，记得给我爷爷买过这种，或许老人家也会来这里买收音机吧。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/b70c51c52f0e2f7252e251c4b1d4547f.png"></p><blockquote><p>三楼是卖游戏主机的，人流零星，四楼是游乐场街机那些，五楼是餐厅，六楼？貌似封闭了。</p></blockquote><blockquote><p>走出百脑汇心里感伤，哎现在线下的生意还有什么好做的呢？抬头一看，还是茅台好做。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/dd9f1dfb2dfc68bcfd3ad5fbb5ffd576.png"></p><blockquote><p>记得百脑汇隔壁是太平洋电脑城二期，也想过去看看，谁知找不着，认了半天，原来电脑城变了美食城。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/4c41b07d7c2888820477c1198b5c59de.png" alt="这是10年前的太平洋电脑城二期"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/b2ae806fa88e9b0c3f0e9351473744fc.png"></p><blockquote><p>走了走，一二层是美食街，三层是教育机构，我走了个寂寞。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/818402bf34c48677925e8a8905ae64d5.png"></p><blockquote><p>南方电脑城也没能逃脱命运，悬空的美食港三个字宣布了它的死亡。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/2e3127540804c3045ab8f869d066551c.png"></p><blockquote><p>除了负一层卖电脑配件，其余都是餐厅。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/24e5f7f5b460ea5c905ac466dc9c2c85.png"></p><blockquote><p>负一层大部分店都关门了。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/4339e985eb45398e020028a1c3e8c288.png"></p><blockquote><p>我的青春一去不复返了，泪崩！</p></blockquote><blockquote><p>翻了翻数据，2020年全球电脑销量为2.75亿台，这个数字在2012年是3.52亿台，电脑的需求被智能手机取代，如今的电脑都是轻薄的笔记本和平板，越来越标准化，而越标准化的东西就越适合网上卖，电脑城也就没有存在的必要了。</p></blockquote><blockquote><p>再加上电商巨头纷纷涌进线下，个体商家未来的路会越来越窄。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/fbf5e52385b7c4b99d7f62e3f3d96cec.png"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/88ca3d104d9c7d5abc8249f6771c610b.png"></p><blockquote><p>回家后在附近逛，没想到留着这个心居然发现一间小小的电脑配件店。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/3ab2cfb0fdedd888d5c5dbffa760a68d.png"></p><blockquote><p>老板娘在看电视剧，儿子在旁玩游戏，转悠了下，老板娘用粤语问我买什么，我说就看看。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/451ed489babed29aa2367cfd88d0388c.png" alt="架子上放着变形金刚"></p><blockquote><p>我问你们还卖变形金刚啊，她说那是买给儿子的玩具，我说现在没变形金刚看了吧，她说老公喜欢，于是给儿子看变形金刚的电影，买变形金刚的玩具，我笑了笑说你老公肯定是80后。</p></blockquote><blockquote><p>我说现在生意很一般了吧，她说还行，主要帮人装电脑挣钱，装一台能挣3、400。现在还有人装电脑啊？她说当然有，不过她不喜欢给人装，装了还要保修，还是喜欢重装系统，重装一次50元，不用保修。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/4bbc3ae61b2b38b5626345c78b6b0ba7.png"></p><blockquote><p>我说这店挺旧的，她说开很久了05年开的，如今大儿子都上初中了，小儿子今年9月也要上小学，我问为什么做这行，她说老公喜欢，后来老公去了国企就把店交给她，这样也好方便照顾小孩，我说国企很稳定吧，她说也不稳定，都被转了2次私企了，没什么安全感。</p></blockquote><blockquote><p>我问现在店年收入有没有10万，她说大部分时候没有，等小儿子上小学这店就不做了，我问怎么不开网店，她说不懂也不喜欢，还是喜欢实体的见面实在。</p></blockquote><blockquote><p>跟老板聊了1小时没人进店，估计再过几个月这店也看不到了吧。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>程序人生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序人生</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>&lt;转&gt;一个Java程序员的一生</title>
    <link href="/2022/10/19/reprint/reprint_002/"/>
    <url>/2022/10/19/reprint/reprint_002/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/reprint/reprint_bg_02.jpeg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">本文转载自网络文章，阅读之后，深有感触，故而转载。<br><br>如作者有要求，可联系我删除。<br><br>原文链接: https:<span class="hljs-regexp">//</span>blog.csdn.net<span class="hljs-regexp">/caoli201314/</span>article<span class="hljs-regexp">/details/</span><span class="hljs-number">118065771</span><br></code></pre></td></tr></table></figure><h2 id="悲剧的出生"><a href="#悲剧的出生" class="headerlink" title="悲剧的出生"></a>悲剧的出生</h2><blockquote><p>三蛋战胜几十亿竞争者，成功降生。</p><p>不过悲剧的是~</p><p>父亲是个混混，母亲常年抽烟解愁，种田和打点零工！家徒四壁，一贫如洗~</p><p>哎，从一出生开始就是一个悲剧~</p><p><img src="https://img-blog.csdnimg.cn/20210620081852679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p></blockquote><h2 id="悲剧的童年"><a href="#悲剧的童年" class="headerlink" title="悲剧的童年"></a>悲剧的童年</h2><blockquote><p>三蛋的童年是在父母的吵闹，打骂，砸东西中度过的，</p><p>所以三蛋从小就缺爱，很自卑，也不知道如何去爱人，唯一的快乐，就是和两个邻居家的孩子阿猫阿狗一起玩泥巴！</p><p><img src="https://img-blog.csdnimg.cn/20210620081949409.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p></blockquote><h2 id="悲壮的学业"><a href="#悲壮的学业" class="headerlink" title="悲壮的学业"></a>悲壮的学业</h2><blockquote><p>三蛋接受的是偏远山区的农村教育，老师很努力，倾其所有，孩子们还是很认真的学习，包括三蛋，老师每天上课前的第一句就是：“你们只有好好努力学习，才能走出大山，学习是你们唯一的出路！”</p><p>三蛋很想摆脱原生家庭的束缚，坚定信念，一定要好好读书，走出大山；所以三蛋每天放学后，干完农活，就学习，练习！</p><p><img src="https://img-blog.csdnimg.cn/20210620082016633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p><p>到了高考，功夫不负有心人，分数能上大专，三蛋平时不怎么喜欢跟人打交道，所以选了计算机专业，最终被一所大专院校录取。但是母亲貌似并不开心，父亲也是无所谓的态度；</p><p>拿到录取通知书后，三蛋去当地镇上工地搬砖了2个月，挣了5千块钱；然后踏上了求学路，也顺利地办理了国家助学贷款，从此三蛋离开了大山。</p><p><img src="https://img-blog.csdnimg.cn/20210620082027555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p></blockquote><h2 id="努力的大学"><a href="#努力的大学" class="headerlink" title="努力的大学"></a>努力的大学</h2><blockquote><p>三蛋的大学也是悲剧的，和城里的孩子格格不入，和农村里来的孩子也是差距很大，非常自卑。</p><p>三蛋最大的兴趣就是上计算机课，上机操作时间充分利用。</p><p><img src="https://img-blog.csdnimg.cn/20210620082040570.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p><p>经过半年的学习，三蛋彻底爱上计算机了，痴迷状态，寒假没有回老家，一是为了省来回路费，二是对那个家没有多少爱了！</p><p>为了尽快能搞个二手笔记本敲代码，三蛋去电脑城当了2个月的学徒工，装系统，组装电脑，去仓库卸货，理货，拿货；</p><p><img src="https://img-blog.csdnimg.cn/20210620082046379.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p><p>老板对三蛋的工作态度非常认可，结了6千块工资，以及赠送了一个高配二手笔记本给三蛋。从此，三蛋的世界不再寂寞。</p><p><img src="https://img-blog.csdnimg.cn/20210620082052458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p><p>三蛋剩下的学业里，除了上课，就是带着笔记本去图书馆打代码，学习生活单调而充实；</p></blockquote><h2 id="初出社会，悲伤996"><a href="#初出社会，悲伤996" class="headerlink" title="初出社会，悲伤996"></a>初出社会，悲伤996</h2><blockquote><p>大专毕业后，很多城里的同学父母安排好了工作，有的跟父母去做生意了。三蛋只能去带着简历跑人才市场。</p><p><img src="https://img-blog.csdnimg.cn/20210620082059692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p><p>三蛋编程功底还可以，接到了几个面试邀请，奇怪的是，面试官第一问题不是问技术问题，是问“你接受加班吗？”。</p><p>最终，三蛋选择了一家待遇相对高点的外包公司，开启了996的工作生涯！</p><p><img src="https://img-blog.csdnimg.cn/20210620082112769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p><p>加班熬夜5年，三蛋的待遇从5千涨到7千，又涨到了1万2；但是身体也越来越差，腰疼，颈椎疼，偶尔还胸口疼，居然还尿频！脸色也越来越差，头发也稀疏好多！</p></blockquote><h2 id="悲剧的爱情"><a href="#悲剧的爱情" class="headerlink" title="悲剧的爱情"></a>悲剧的爱情</h2><blockquote><p>三蛋工作第11年，34岁，资深高级程序员，有一天，在写字楼邂逅了一个女生，她拖着一个很重的箱子要进电梯，三蛋看到后，很热心的上前帮她把箱子拖到电梯里，上电梯后，和女生一起把箱子抬到她单位。</p><p>女生非常感谢她，说要请三蛋吃饭。三蛋顿时产生了一丝丝爱情的火花。</p><p><img src="https://img-blog.csdnimg.cn/20210620082119102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p><p>中午吃饭时候，经过了解，女生叫小花，农村姑娘，隔壁单位做人事，30岁，依然单身。</p><p><img src="https://img-blog.csdnimg.cn/2021062008212528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p><p>小花对三蛋也有好感，因为三蛋工作繁忙，有时候项目来了，天天加班，小花对此很反感。</p><p><img src="https://img-blog.csdnimg.cn/2021062008213226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p><p>直到有一次，小花生日那天，三蛋提前几天就预定好了鲜花和餐厅，准备一场美好的两人生日宴。</p><p>但是紧急情况来了，单位领导跟三蛋说，公司项目出现重大bug，今晚必须修复上线，不得有误。三蛋很慌忙地跟领导说，“今天女朋友生日，能不能晚点到公司来加班”。领导愤怒地吼道“公司几千万的项目，客户那边都急死了，私事放一边去，赶紧去修复bug”。三蛋怕丢了工作，只能去加班，打电话给小花说今晚来不了了，公司加班！小花听到后，直接挂断电话…</p><p><img src="https://img-blog.csdnimg.cn/20210620082138186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p><p>三蛋的悲剧爱情故事仅仅持续了三个月就结束了。三蛋自此抑郁寡欢，再加上父母年迈，经常电话里头催三蛋打钱给他们，精神一直受挫。</p></blockquote><h2 id="快乐的走了"><a href="#快乐的走了" class="headerlink" title="快乐的走了~"></a>快乐的走了~</h2><blockquote><p>35岁那年，公司架构师跳槽去了阿里爸爸，三蛋无奈成了单位技术一把手，年薪加到50万；但是压力也更大了。加上长期的精神抑郁和体力上摧残，身体一天不如一天；</p><p>在一次大项目研发中，三蛋持续加班了两个月，近一段时间总是食欲不振，身体也消瘦，身上还疼痛，直接有一次发热了，才去了医院检查，检查结果让三蛋震惊了，得到肝癌。</p><p><img src="https://img-blog.csdnimg.cn/20210620082150321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p><p>三蛋紧急住院治疗，半年时间，花光了80万准备买房的积蓄，以及同事们几万的捐赠，最后没钱治疗了。父母那边没有一个亲戚朋友愿意借钱的。</p><p><img src="https://img-blog.csdnimg.cn/20210620082155974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p><p>三蛋自主办理了出院，父母把三蛋接回了他曾今讨厌的大山里，回到了那个破烂房子。</p><p><img src="https://img-blog.csdnimg.cn/2021062008220571.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p><p>躺在门板上，三蛋哭了“忙活了几十年，还是回到了原点，没有一丝丝幸福和一点点快乐”。</p><p>哭着哭着，又笑起来了“我终于可以解脱了，可以去快乐的地方了”。</p><p><img src="https://img-blog.csdnimg.cn/20210620082218222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhb2xpMjAxMzE0,size_16,color_FFFFFF,t_70"></p><p>三蛋，享年35~</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>程序人生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序人生</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>&lt;转&gt;一个96年前端的2022年中总结(落户,看房,还贷,被裁)</title>
    <link href="/2022/10/18/reprint/reprint_001/"/>
    <url>/2022/10/18/reprint/reprint_001/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/reprint/reprint_bg_01.jpeg"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">本文转载自网络文章，本人阅读后深有感触，故而转载。<br><br>如作者有要求，可联系我删除。<br><br>原文链接: https:<span class="hljs-regexp">//</span>juejin.cn<span class="hljs-regexp">/post/</span><span class="hljs-number">7124511406099005471</span><br></code></pre></td></tr></table></figure><br/><br/><blockquote><p>人到中年中年总是觉得很累,每天忙不完的事,操不完的心,曾今那些无忧无虑的日子似乎消失的无影无踪, 工作三年一点存款没有</p></blockquote><br/><h3 id="落户"><a href="#落户" class="headerlink" title="落户"></a>落户</h3><blockquote><p>关于落户这个事, 就是一个很突然的想法,很突然, 得知天津有个”海河英才计划”,只要是本科生, 就比较容易落户,所以就想着试一试,<br>心想起码这个是一个阶级的跨越(农村–&gt;城市), 然后就在网上各种搜索,问一些了解的朋友,看看怎么操作,<br>最后发现好多人说有北京社保,在天津落户会被查出来,<br>然后就被拉入黑名单了. 最后为了稳妥还是找了一个中介帮忙操作了一下,花了1w, 等我办完,不久就有我的朋友自己办的三无人员落户,<br>一分钱没花.唉😌!!!!!</p></blockquote><br/><h3 id="看房"><a href="#看房" class="headerlink" title="看房"></a>看房</h3><blockquote><p>一开始在安居客上看, 因为穷, 基本也没啥可选择性, 一筛选也就那么几个, 然后就联系了一个销售去看房, 不得不说这个销售真的可以,<br>不知道他们能赚多少钱哈, 但是服务是真的不错, 一到了高铁站他们就去接你,还请你吃饭, 带着你看,看完之后还把你送到高铁站.<br>想着一开始就看西青和北辰的,但是西青的都好贵, 北辰好像会好点, 然后就去北辰看, 销售说他觉得武清也不错, 就带着去武清也看了,<br>看完之后, 心里比较了一下, 感觉被武清的哪个样板间和户型深深吸引了,并且价格也比较合适些, 然后我回到北京一周左右吧,<br>就跟那个销售说,打算买武清哪个, 然后然后我父母给我拿了20w, 剩下的就是我自己的,还借了朋友一些, 首付了40多, 然后就打印征信,<br>一顿签字就买了. 感觉很随意, 感觉买房就跟买菜似的, 不过还是有一点区别的, 买菜之后不会让我身无分文,<br>买房会😭.现在就是每个月5000多贷款”真爽”.</p></blockquote><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ca57b09486634e81b4bab8d0e3b49e02~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp"></p><br/><h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><blockquote><p>1、缺失了刚毕业那会的激情,刚毕业那会,每天下班还会去学习, 刷视频, 看文章, 现在下班回家已经不想再打开电脑了. 刷视频(<br>此视频非彼视频)</p><p>2、今年也学习了一些新的东西摸鱼之间,刷了一些课程,&lt;破解JavaScript高级玩法，成为精通JS的原生专家&gt;&lt;Vue3全家桶&gt;</p><p>3、React技术栈是我工作一直使用的,也会持续性的学习一些,每天刷刷Medium和掘金</p><p>4、深度学习Nginx,进行了一半了,以前对nginx只停留在使用的层面</p><p>5、上半年在公司分享了一下架手架的原理以及实践</p><p>6、英语的学习说实话真的有点三天打鱼两天晒网了, 好在现在有一半了</p></blockquote><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/07a50f34a7a64fc794d292f47f4f806f~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp"></p><br/><h3 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h3><blockquote><p>21年年底, 老东家北京这边合作的项目,终止了,然后面临了裁员, 不过当初也确实有了想跳槽的想法了,本来想,等到年终奖发了,就提离职.<br>没想到提前到来了, 给了正常的赔偿(n+1) 拿了三个月的赔偿, 正好月底, 算上本月的薪资,还有一些调休啥的 加起来一共是4个月,<br>感觉还挺爽的, 因为大概还有个20天左右吧, 就快过年了, 然后在回家和找工作抉择了一下, 决定先找找工作,然后就开始学习在掘金上查看面经,<br>感觉都是各种源码, 给我搞的有点懵, 毕竟缺钱嘛. 先后面试了一些公司: 金山, 58, 携程, 欢聚, 等等; 说实话,这段时间招人的还挺多的.<br>所以我很快就入职了, hr问我年前能入职吗? 其实那段时间疫情严重了, 老家那边也不让北京的回去,<br>所以在过年的前一周我入职了, (<br>没钱的人不配拥有假期😭) . 唉, 第一次自己在外地过年.</p></blockquote><h4 id="关于兼职"><a href="#关于兼职" class="headerlink" title="关于兼职:"></a>关于兼职:</h4><blockquote><p>今年和朋友一块干了一个公司的官网,本来也没打算要钱的,最后老板一人给了一张京东e卡</p><p>还干了一个审核ppt的工作,一个ppt给150,不用改, 就说哪里写的不合适, 不过这个活有点恶心, 每个人理解不一样, 每次我这边审核后,<br>拿去交付,还是很多问题</p></blockquote><br/><h3 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h3><blockquote><p>1、上半年感觉一直有疫情断断续续,大家都比较封闭,也没出去玩过, 偶尔和朋友去爬个山. 5, 6月还居家办公了好久, 记不太清了,应该得有一个月</p><p>2、从去年十月一到现在一直没有回过家, 有些想回去看看, 但是最近每个周末都有事😞</p><p>3、和女朋友去看过两次脱口秀, 感觉现场的感觉还是很棒的, 比电视看好太多</p><p>4、因为对象住他们单位的宿舍, 所以我自己平常下班也懒得收拾屋子, 只有礼拜天,才会大扫除一下, 或者对象来的时候😁</p><p>5、前段时间迷上了王者,以前从来不怎么玩游戏的, 熬夜打游戏, 导致生活节奏有点乱, 每天的精神状态也不如以前,正在积极调整.<br>但是吧,我告诉你们我的云中君玩的贼6的 不服来战哦</p><p>6、养了一只鹦鹉, 刚来还不是很好看, 现在尾巴长长的了</p></blockquote><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f07e2be4fbb1445bae3ad991633fa388~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp"></p><br/><h3 id="下半年flag"><a href="#下半年flag" class="headerlink" title="下半年flag"></a>下半年flag</h3><blockquote><ul><li><input disabled="" type="checkbox"> 完成Nginx的深度学习</li><li><input disabled="" type="checkbox"> 希望能出去转一圈, 看看外面的世界</li><li><input disabled="" type="checkbox"> 继续背单词学习</li><li><input disabled="" type="checkbox"> 看看车车, 目前感觉Crv和宋大妈还不错</li><li><input disabled="" type="checkbox"> 能再进行一次有价值的分享</li></ul></blockquote>]]></content>
    
    
    <categories>
      
      <category>程序人生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序人生</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git 将多条commit合并为一条</title>
    <link href="/2022/10/17/git/Git-%E5%B0%86%E5%A4%9A%E6%9D%A1commit%E5%90%88%E5%B9%B6%E4%B8%BA%E4%B8%80%E6%9D%A1/"/>
    <url>/2022/10/17/git/Git-%E5%B0%86%E5%A4%9A%E6%9D%A1commit%E5%90%88%E5%B9%B6%E4%B8%BA%E4%B8%80%E6%9D%A1/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/git/git_bg_02.jpeg"></p><h1 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h1><ul><li>在做新功能开发的过程中，往往会涉及多次 <code>commit</code>。</li><li>通常来说，在发布版本时，多次提交会直接 <code>push</code> 到主分支。</li><li>但在某些特殊情况，限制我们只能做一次提交，这时候需要进行 <code>commit</code> 合并了。</li></ul><h1 id="二、找出要合并的提交记录"><a href="#二、找出要合并的提交记录" class="headerlink" title="二、找出要合并的提交记录"></a>二、找出要合并的提交记录</h1><ul><li>可以通过 <code>git log</code> 命令找出最近的提交记录。</li><li>使用 <code>IDEA</code> 或 <code>Android Studio </code> 开发的话，直接就能在底部的工具栏中可以看到提交记录。</li></ul><p><img src="/img/git/git_01.jpg"></p><h1 id="三、合并提交"><a href="#三、合并提交" class="headerlink" title="三、合并提交"></a>三、合并提交</h1><ul><li>如上图所示，要合并最近的 <code>4</code> 条记录，可以有 <code>2</code> 种方法：</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">git</span> rebase -i HEAD~<span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><ul><li>或者：</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">git rebase -<span class="hljs-selector-tag">i</span> fc2bc000<br></code></pre></td></tr></table></figure><ul><li>其中的 <code>HEAD~4</code> 表示最近的4次提交，<code>fc2bc000</code> 为4次提交的父记录，即倒数第5次提交。</li></ul><p><img src="/img/git/git_02.jpg"></p><ul><li>在弹出的界面，按 <code>i</code> 进入编辑模式，并将后面3条记录的 <code>pick</code> 改为 <code>s</code> 或 <code>squash</code>。</li><li>按 <code>ESC</code> 退出编辑模式，再输入 <code>:wq</code> 保存修改记录并退出。</li></ul><p><img src="/img/git/git_03.jpg"></p><ul><li>然后弹出合并后的 <code>commit</code> 界面。注释掉无效的行数，修正提交记录，保存退出。</li></ul><p><img src="/img/git/git_04.jpg"></p><ul><li>这时候再看提交记录，已经变成一条啦！</li></ul><h1 id="四、推送到远端"><a href="#四、推送到远端" class="headerlink" title="四、推送到远端"></a>四、推送到远端</h1><ul><li>执行 <code>git push -f</code> 命令将修改推送到远端。</li><li>如果代码没提交过，可以直接通过 <code>git push</code> 推送，如果已经提交过，则可能提示 <code>git pull xxx</code>，不用管它直接 <code>force</code> 推送。</li></ul><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs maxima">git <span class="hljs-built_in">push</span> -f<br>或者<br>git <span class="hljs-built_in">push</span> <span class="hljs-built_in">origin</span> xxx/xxx -f<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
      <category>原创</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android Studio for Mac 快捷键</title>
    <link href="/2022/10/16/mac/Android%20Studio%20for%20Mac%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <url>/2022/10/16/mac/Android%20Studio%20for%20Mac%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/mac/mac_bg_05.jpeg"></p><ul><li>Android Studio 在 <code>Mac</code> 和 <code>Windows</code> 上的快捷键还是有一定的差异。</li></ul><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">查找类或文件</span><span class="hljs-punctuation">:</span> <span class="hljs-string">双击 Shift</span><br><br><span class="hljs-attribute">查找文件内容</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Command + Shift + F</span><br><br><span class="hljs-attribute">快速构成代码</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Command + N</span><br><br><span class="hljs-attribute">代码提示</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Control + Space (Mac 会冲突, 需要修改)</span><br><br><span class="hljs-attribute">向下移动一行</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Command + Shift + Down 或 Option + Shift + Down</span><br><br><span class="hljs-attribute">向上移动一行</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Command + Shift + Up 或 Option + Shift + Up</span><br><br><span class="hljs-attribute">注释代码</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Command + /</span><br><br><span class="hljs-attribute">格式化代码</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Command + Option + L</span><br><br><span class="hljs-attribute">if/try 等包裹代码</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Command + Option + T</span><br><br><span class="hljs-attribute">快捷向下复制行</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Command + D</span><br><br><span class="hljs-attribute">删除行</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Command + Delete 或 Command + X</span><br><br><span class="hljs-attribute">代码高亮向下查找</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Command + G</span><br><br><span class="hljs-attribute">代码高亮向上查找</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Command + Shift + G</span><br><br><span class="hljs-attribute">定位到行</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Command + L</span><br><br><span class="hljs-attribute">快速到行首 / 尾</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Command + Left / Right</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>mac</category>
      
      <category>原创</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MacBook常用快捷键</title>
    <link href="/2022/10/16/mac/MacBook%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <url>/2022/10/16/mac/MacBook%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/mac/mac_bg_04.jpeg"></p><h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><ul><li>MacBook 有一个特殊的按键 <code>Command</code>，相当于 Windows 的 <code>Ctrl</code> 键。</li></ul><h1 id="二、常用快捷键"><a href="#二、常用快捷键" class="headerlink" title="二、常用快捷键"></a>二、常用快捷键</h1><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs arcade">Command + Shift + . =&gt; 显示或隐藏文件<br>Control + 单击 =&gt; 鼠标右键；<br>Command + <span class="hljs-function"><span class="hljs-params">A</span> =&gt;</span> 全选；<br>Command + <span class="hljs-function"><span class="hljs-params">M</span> =&gt;</span> 缩小窗口；<br>Command + <span class="hljs-function"><span class="hljs-params">W</span> =&gt;</span> 关闭窗口；<br>Command + <span class="hljs-function"><span class="hljs-params">C</span> =&gt;</span> 连接服务器；<br>Command + <span class="hljs-function"><span class="hljs-params">H</span> =&gt;</span> 隐藏窗口；<br>Command + <span class="hljs-function"><span class="hljs-params">Q</span> =&gt;</span> 退出应用程序；<br>Command + <span class="hljs-function"><span class="hljs-params">Z</span> =&gt;</span> 恢复上一步；<br>Command + <span class="hljs-function"><span class="hljs-params">E</span> =&gt;</span> 退出外接装置；<br>Command + shift + <span class="hljs-function"><span class="hljs-params">Z</span> =&gt;</span> 恢复下一步；<br>Command + shift + <span class="hljs-function"><span class="hljs-params">F</span> =&gt;</span> 前往Finder;<br>Command + <span class="hljs-function"><span class="hljs-params">option</span> =&gt;</span> 隐藏（打开）Dock;<br>Command + option + <span class="hljs-function"><span class="hljs-params">W</span> =&gt;</span> 关闭所有窗口；<br>Command + option + <span class="hljs-function"><span class="hljs-params">M</span> =&gt;</span> 缩小所有窗口；<br>Command + shift + <span class="hljs-function"><span class="hljs-params">A</span> =&gt;</span> 前往应用程序文件夹（在finder时）<br>Command + control + option + <span class="hljs-number">8</span> =&gt; 全屏幕反显；<br>Command + control + option + 弹出键 =&gt; 关机；<br>Command + control + 开关键 =&gt; 强制重开机；<br>Command + option + 弹出键 =&gt; 电脑休眠；<br>Command + option + <span class="hljs-function"><span class="hljs-params">esc</span> =&gt;</span> 强制退出应用程序；<br>Command + 单按标题列 =&gt; 跳到上一页；<br>Command + <span class="hljs-function"><span class="hljs-params">delete</span> =&gt;</span> 删除文件；<br>Command + option + shift + <span class="hljs-function"><span class="hljs-params">delete</span> =&gt;</span> 强制清除废纸篓；<br>Command + option + <span class="hljs-function"><span class="hljs-params">D</span> =&gt;</span> 打开内置字典，单字实时翻译；<br>Command + .（句号） =&gt; 终止任何进行中的操作；<br>Command + <span class="hljs-function"><span class="hljs-params">down</span> =&gt;</span> 在任何文件上使用，可以直接打开该文件；<br>fn + <span class="hljs-function"><span class="hljs-params">delete</span> =&gt;</span> 删除光标右边的字；<br>Command + <span class="hljs-function"><span class="hljs-params">esc</span> =&gt;</span> 启动Front Row窗口操作。<br></code></pre></td></tr></table></figure><h1 id="三、窗口操作"><a href="#三、窗口操作" class="headerlink" title="三、窗口操作"></a>三、窗口操作</h1><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cmake"><span class="hljs-keyword">command</span> + W =&gt; 关闭单一窗口；<br><span class="hljs-keyword">command</span> + N =&gt; 打开新窗口；<br><span class="hljs-keyword">command</span> + <span class="hljs-keyword">option</span> + W =&gt; 关闭所有窗口；<br><span class="hljs-keyword">command</span> + 窗口名称栏 =&gt; 可弹出窗口路径；<br><span class="hljs-keyword">command</span> + <span class="hljs-keyword">option</span> + 窗口名称栏 =&gt; 可返回路径窗口并关掉目前窗口。<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>mac</category>
      
      <category>原创</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MacBook安装NodeJS详解</title>
    <link href="/2022/10/16/mac/MacBook%E5%AE%89%E8%A3%85NodeJS%E8%AF%A6%E8%A7%A3/"/>
    <url>/2022/10/16/mac/MacBook%E5%AE%89%E8%A3%85NodeJS%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/mac/mac_bg_03.jpeg"></p><h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><ul><li>本文以 MacBook 为准，其他设备安装 <code>Node.js</code> 大同小异。</li><li><code>Node.js</code> 已经自带 <code>npm</code> 了</li></ul><h1 id="二、下载客户端"><a href="#二、下载客户端" class="headerlink" title="二、下载客户端"></a>二、下载客户端</h1><ul><li>进入官网，下载 <code>Node.js</code> 最新版本安装包。</li><li>传送门：<a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></li></ul><p><img src="/img/mac/mac_04.jpg"></p><h1 id="三、安装客户端"><a href="#三、安装客户端" class="headerlink" title="三、安装客户端"></a>三、安装客户端</h1><ul><li>双击刚下载的安装包，一直点继续就 OK 啦</li></ul><p><img src="/img/mac/mac_05.jpg"></p><h1 id="四、验证"><a href="#四、验证" class="headerlink" title="四、验证"></a>四、验证</h1><ul><li>打开终端，输入 <code>node -v</code> 和 <code>npm -v</code></li></ul><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span><br>npm -v<br></code></pre></td></tr></table></figure><ul><li>如果能正常显示版本号即安装成功</li><li>如图，我安装的 <code>node.js</code> 和 <code>npm</code> 版本分别是是 <code>v16.18.0</code> 和 <code>8.19.2</code></li></ul><p><img src="/img/mac/mac_06.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>mac</category>
      
      <category>原创</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MacBook查看IP地址</title>
    <link href="/2022/10/16/mac/MacBook%E6%9F%A5%E7%9C%8BIP%E5%9C%B0%E5%9D%80/"/>
    <url>/2022/10/16/mac/MacBook%E6%9F%A5%E7%9C%8BIP%E5%9C%B0%E5%9D%80/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/mac/mac_bg_02.jpeg"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>MacBook 和 Windows 不一样，查看 IP 不是直接点网络图标就行</li></ul><h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><ul><li>打开终端，输入 <code>ifconfig | grep &quot;inet&quot;</code></li></ul><p><img src="/img/mac/mac_02.jpg"></p><h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><ul><li>系统偏好设置 - 网络 - 高级 - TCP&#x2F;IP - IPv4地址，显示的内容即为 IP。</li></ul><p><img src="/img/mac/mac_03.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>mac</category>
      
      <category>原创</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MacBook修改终端主机名称</title>
    <link href="/2022/10/16/mac/MacBook%E4%BF%AE%E6%94%B9%E7%BB%88%E7%AB%AF%E4%B8%BB%E6%9C%BA%E5%90%8D%E7%A7%B0/"/>
    <url>/2022/10/16/mac/MacBook%E4%BF%AE%E6%94%B9%E7%BB%88%E7%AB%AF%E4%B8%BB%E6%9C%BA%E5%90%8D%E7%A7%B0/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/mac/mac_bg_01.jpeg"></p><h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><ul><li>新买的 MacBook Pro 初始化后，电脑名称会是 <code>xxx的MacBook Pro</code>，然后在终端上显示 <code>xxx@xxxdeMacBook-Pro</code>，太长了。</li></ul><h1 id="二、修改终端名称"><a href="#二、修改终端名称" class="headerlink" title="二、修改终端名称"></a>二、修改终端名称</h1><ul><li>修改终端的显示名称 HostName:</li></ul><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">sudo scutil --<span class="hljs-keyword">set</span> HostName <span class="hljs-comment">jiangxr</span><br></code></pre></td></tr></table></figure><ul><li>修改后，再次打开终端，显示的即为新的名称：</li></ul><p><img src="/img/mac/mac_01.jpg"></p><h1 id="三、修改访达中的电脑名称"><a href="#三、修改访达中的电脑名称" class="headerlink" title="三、修改访达中的电脑名称"></a>三、修改访达中的电脑名称</h1><ul><li>修改访达中的电脑名称：</li></ul><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">sudo scutil --<span class="hljs-keyword">set</span> ComputerName <span class="hljs-comment">jxr</span><br></code></pre></td></tr></table></figure><h1 id="四、修改本地主机名称"><a href="#四、修改本地主机名称" class="headerlink" title="四、修改本地主机名称"></a>四、修改本地主机名称</h1><ul><li>修改本地主机名称：</li></ul><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">sudo scutil --<span class="hljs-keyword">set</span> LocalHostName <span class="hljs-comment">jiangxr</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>mac</category>
      
      <category>环境配置</category>
      
      <category>原创</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mac</tag>
      
      <tag>环境配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2020年管理类联考数学</title>
    <link href="/2022/10/15/mba/2020%E5%B9%B4%E7%AE%A1%E7%90%86%E7%B1%BB%E8%81%94%E8%80%83%E6%95%B0%E5%AD%A6/"/>
    <url>/2022/10/15/mba/2020%E5%B9%B4%E7%AE%A1%E7%90%86%E7%B1%BB%E8%81%94%E8%80%83%E6%95%B0%E5%AD%A6/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/mba/mba_001.jpeg"></p><h1 id="一、问题求解"><a href="#一、问题求解" class="headerlink" title="一、问题求解"></a>一、问题求解</h1><blockquote><p>1、某产品去年涨价10%，今年涨价20%，则该产品这两年涨价( )<br>A、15%<br>B、16%<br>C、30%<br>D、32%<br>E、33%</p></blockquote><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gcode">解析：<br>以原价为基准，涨 <span class="hljs-number">10</span><span class="hljs-meta">%</span> 即为 <span class="hljs-number">1.1</span>，再涨 <span class="hljs-number">20</span><span class="hljs-meta">%</span>，即为 <span class="hljs-number">1.1</span> * <span class="hljs-number">1.2</span> = <span class="hljs-number">1.32</span>，也就是说一共涨了<span class="hljs-number">32</span><span class="hljs-meta">%</span>。<br>本题选 D，可惜的是有的同学直接相加选了 C，错得可惜。<br></code></pre></td></tr></table></figure><br/><br/><blockquote><p>2、设集合A&#x3D;{𝑥│|𝑥−𝑎|＜1，𝑥∈𝑅}，B&#x3D;{𝑥│|𝑥−𝑏|＜2，𝑥∈𝑅}，则A⊂B的充分必要条件是( )<br>A、|𝑎−𝑏|≤1<br>B、|𝑎−𝑏|≥1<br>C、|𝑎−𝑏|＜1<br>D、|𝑎−𝑏|＞1<br>E、|𝑎−𝑏|&#x3D;1</p></blockquote><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dns">解析：<br>这题直接做会很复杂，瞄一眼直接就用特值代入法。<br>从选项中看出基本上都是围绕<span class="hljs-number">1</span>在转，直接取a=<span class="hljs-number">1</span>,b=<span class="hljs-number">0</span>，得<span class="hljs-keyword">A</span>=(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>),B=(-<span class="hljs-number">2</span>，<span class="hljs-number">2</span>)，符合<span class="hljs-keyword">A</span>⊂B，排除C和D。<br>再取a=<span class="hljs-number">1</span>/<span class="hljs-number">2</span>,b=<span class="hljs-number">0</span>，得出<span class="hljs-keyword">A</span>=(-<span class="hljs-number">1</span>/<span class="hljs-number">2</span>, <span class="hljs-number">3</span>/<span class="hljs-number">2</span>)，B=(-<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)，同样符合<span class="hljs-keyword">A</span>⊂B，排除B和E，答案只有<span class="hljs-keyword">A</span>。<br></code></pre></td></tr></table></figure><br/><br/><blockquote><p>3、一项考试的总成绩由甲、乙、丙三部分组成:<br>总成绩&#x3D;甲成绩×30%+乙成绩×20%+丙成绩×50%。<br>考试通过标注是：每部分≥50分，且总成绩≥60分。<br>已知某人甲成绩70分，乙成绩75分，且通过了这项考试，则此人丙成绩的分数至少是( )<br>A、48<br>B、50<br>C、55<br>D、60<br>E、62</p></blockquote><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs llvm">解析：<br>这题有<span class="hljs-number">2</span>个要求，一是单项为<span class="hljs-number">50</span>以上，二是总成绩为<span class="hljs-number">60</span>以上。<br>将<span class="hljs-number">70</span>和<span class="hljs-number">75</span>代入题中的总成绩公式，<span class="hljs-number">70</span> * <span class="hljs-number">0.3</span> + <span class="hljs-number">75</span> * <span class="hljs-number">0.2</span> + <span class="hljs-number">0.5</span><span class="hljs-keyword">x</span> &gt;<span class="hljs-operator">=</span> <span class="hljs-number">60</span><span class="hljs-punctuation">,</span><br>得出<span class="hljs-keyword">x</span> &gt;<span class="hljs-operator">=</span> <span class="hljs-number">48</span>，但第一个要求是<span class="hljs-number">50</span>以上，只有选B了。<br></code></pre></td></tr></table></figure><br/><br/><blockquote><p>4、从1-10这10个整数中任取3个数，恰有1个质数的概率是( )<br>A、2&#x2F;3<br>B、1&#x2F;2<br>C、5&#x2F;12<br>D、2&#x2F;5<br>E、1&#x2F;120</p></blockquote><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs tap">解析：<br>这题首先得清楚质数是啥，10以内只有2、3、5、7这4个数为质数，别把1扯进去。<br>取3个数，1质数的取法有: C4取1 * C6取2 =<span class="hljs-number"> 4 </span>*<span class="hljs-number"> 15 </span>= 60。<br>取3个数，随便取的取法有: C10取3 = 120。故概念为<span class="hljs-number"> 60 </span>/<span class="hljs-number"> 120 </span>= 1/2。<br>分析：<br>有的同学把1当作质数算进去发现答案为5/12，直接选了C，很是可惜。<br></code></pre></td></tr></table></figure><br/><br/><blockquote><p>5、$若等差数列𝑎_{𝑛}满足𝑎_{1}&#x3D;8 ，且𝑎_{2}+𝑎_{4}&#x3D;𝑎_{1}，则𝑎_{𝑛}的前𝑛项和的最大值为$（ ）<br>A、16<br>B、17<br>C、18<br>D、19<br>E、20</p></blockquote><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tap">解析：<br>题目说了a1=8，列出等式<span class="hljs-number"> 8 </span>+ d +<span class="hljs-number"> 8 </span>+ 3d = 8，得出d=-2。也就是说每一项都比前一项少2。<br>因此前n项最大值为<span class="hljs-number"> 8 </span>+<span class="hljs-number"> 6 </span>+<span class="hljs-number"> 4 </span>+<span class="hljs-number"> 2 </span>= 20<br>分析：<br>这是送分题。<br></code></pre></td></tr></table></figure><br/><br/><blockquote><p>6、已知实数 $𝑥$ 满足 $𝑥^2 + \frac{1}{𝑥^2} −3𝑥 + \frac3x + 2 &#x3D; 0$，则$ 𝑥^3 + \frac1{𝑥^3} $&#x3D;( )<br>A、12<br>B、15<br>C、18<br>D、24<br>E、27</p></blockquote><p><img src="/img/mba/math_06.png"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">解析：<br>事实上，这题主要考查化平方和公式，如果对平方和公司熟悉的话这就是送分题。<br></code></pre></td></tr></table></figure><br/><br/><blockquote><p>7、设实数 𝑥,𝑦 满足 |𝑥−2|+|𝑦−2|⩽2 ，则 $𝑥^2+𝑦^2$ 的取值范围是（ ）<br>A、[2,18]<br>B、[2,20]<br>C、[2,36]<br>D、[4,18]<br>E、[4,20]</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros">解析：<br>从5个选项分析，这题的最小值只能是2和4，但<span class="hljs-attribute">x</span>=1,y=1符合题目要求，即最小值可以取到2。<br>然后再看最大值，2个数绝度值小于等于2，要取最大值只能取边界值，即一个是2一个是0。<br>可以让<span class="hljs-attribute">x-2</span>=2，y-2=0，从而得到x=4，y=2，最大值为20，选B。<br></code></pre></td></tr></table></figure><br/><br/><blockquote><p>8、某网站对单价为55元，75元，80元的三种商品进行促销，促销策略是每单满200元减𝑚元，<br>如果每单减𝑚元后实际售价均不低于原价的8折,那么𝑚的最大值为( )<br>A、40<br>B、41<br>C、43<br>D、44<br>E、48</p></blockquote><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs subunit">解析：<br>三件商品满200打折，200选的组合最小为50<span class="hljs-string">+75</span><span class="hljs-string">+75</span>，最大为80<span class="hljs-string">+80</span><span class="hljs-string">+80</span>，<br>分别对这两种组合代进去算m，算出一个是41，一个是48。<br>商家一般都比较扣，你只能减41，如果减48则有的会低于8折。<br>分析：<br>这题其实很坑，很多人都选错了，包括我。看出41和48后我就直接选了48，亏大发了。<br></code></pre></td></tr></table></figure><br/><br/><blockquote><p>9、某人在统一观众群体中调查了对五部电影的看法，得到如下数据：<br>据此数据，观众意见分歧最大的前两部电影依次是( )。<br>A、第一部，第三部<br>B、第二部，第三部<br>C、第二部，第五部<br>D、第四部，第一部<br>E、第四部，第二部</p><table><thead><tr><th align="center">电影</th><th align="center">第一部</th><th align="center">第二部</th><th align="center">第三部</th><th align="center">第四部</th><th align="center">第五部</th></tr></thead><tbody><tr><td align="center">好评率</td><td align="center">0.25</td><td align="center">0.5</td><td align="center">0.3</td><td align="center">0.8</td><td align="center">0.4</td></tr><tr><td align="center">差评率</td><td align="center">0.75</td><td align="center">0.5</td><td align="center">0.7</td><td align="center">0.2</td><td align="center">0.6</td></tr></tbody></table></blockquote><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mathematica">解析：<br>首先要弄清什么叫分歧大，也就是好评和差评差不多才叫分歧大。<br>如果清一色好评或差评，就没有分歧了。<br>故选<span class="hljs-built_in">C</span>。<br>分析：<br>这题其实很坑，由于概念容易混淆，好多的考生被命题老师给戏耍了。<br></code></pre></td></tr></table></figure><br/><br/><blockquote><p>10、如图，在△ABC中，∠ABC&#x3D;30°，将线段AB绕点B旋转至DB，使∠DBC&#x3D;60°，则△DBC和△ABC的面积之比为( )<br>A、1<br>B、√2<br>C、2<br>D、√3&#x2F;2<br>E、√3<br><img src="/img/mba/math_10.jpeg"></p></blockquote><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs abnf">解析：<br>三角形面积公式，S<span class="hljs-operator">=</span><span class="hljs-number">1</span>/<span class="hljs-number">2</span> * a * b * sinΘ。<br>由于边长没有变化，只有夹角变化了。故面积比为 sin60度/sin30度 <span class="hljs-operator">=</span> √<span class="hljs-number">3</span><br>分析：<br>还是要熟悉三角形面积公式呀。<br></code></pre></td></tr></table></figure><br/><br/><blockquote><p>11、已知数列 $𝑎_{𝑛}$ 满足 $𝑎_{1}&#x3D;1,𝑎_{2}&#x3D;2$ ，且 $𝑎_{𝑛+2}&#x3D;𝑎_{𝑛+1}−𝑎_{𝑛}(𝑛&#x3D;1,2,3…)$，则 $𝑎_{100}$&#x3D;( )<br>A、1<br>B、-1<br>C、2<br>D、-2<br>E、0</p></blockquote><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs subunit">解析：<br>本题需要找规律，数列6组一循环，分别是1、2、1、<span class="hljs-string">-1</span>、<span class="hljs-string">-2</span>、<span class="hljs-string">-1</span>。<br>a100=a(96<span class="hljs-string">+4</span>)=a4=<span class="hljs-string">-1</span><br>分析：<br>找规律是解数列的常用技巧<br></code></pre></td></tr></table></figure><br/><br/><blockquote><p>12、如图，圆𝑂的内接△ABC 是等腰三角形，底边BC&#x3D;6，顶角为π&#x2F;4，则圆𝑂的面积为( )<br>A、12π<br>B、16π<br>C、18π<br>D、32π<br>E、36π<br><img src="/img/mba/math_12.jpeg"></p></blockquote><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs abnf">解析：<br>题目说顶角为<span class="hljs-number">45</span>度，那么OB、OC连起来的∠B0C即为<span class="hljs-number">90</span>度，这是初中的知识点了。<br>由BC<span class="hljs-operator">=</span><span class="hljs-number">6</span>得出OB<span class="hljs-operator">=</span>OC<span class="hljs-operator">=</span><span class="hljs-number">3</span>√<span class="hljs-number">2</span>，故面积为πr平方等于<span class="hljs-number">18</span>π。<br>分析：<br>这是初中的知识点了。<br></code></pre></td></tr></table></figure><br/><br/><blockquote><p>13、A、B两地相距1800m，甲、乙两人分别从A、B两地同时出发相向而行，甲的速度100米&#x2F;分， 乙的速度80米&#x2F;分，两人到达对面后立即按原速度返回，则两人第三次相遇时，甲距其出发点( )米.<br>A、600<br>B、900<br>C、1000<br>D、1400<br>E、1600</p></blockquote><p><img src="/img/mba/math_13.jpg"></p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs dns">解析：<br>从图可以看出，第一次相遇<span class="hljs-number">2</span>人走完一条线，第二次相遇是<span class="hljs-number">2</span>人走完三条线，第三次相遇则是走完<span class="hljs-number">5</span>条线。<br>他们<span class="hljs-number">2</span>人走完一条线的时间为<span class="hljs-number">1800</span>/(<span class="hljs-number">100</span>+<span class="hljs-number">80</span>)=<span class="hljs-number">10</span>，走<span class="hljs-number">5</span>条线的时间为<span class="hljs-number">50</span>。<br>那么，甲<span class="hljs-number">50</span>的时间走了<span class="hljs-number">5000</span>米，距离<span class="hljs-keyword">A</span>的距离为<span class="hljs-number">500-1800</span>-<span class="hljs-number">1800为1400</span>米。<br>分析：<br>本题主要考画图及脑力思考<br></code></pre></td></tr></table></figure><br/><br/><blockquote><p>14、节点A、B、C、D两两相连，从一个节点沿线段到另一个节点当作1步， 若机器人从节点A出发，随机走了3步，则机器人未到达节点C的概率为( )<br>A、4&#x2F;9<br>B、11&#x2F;27<br>C、10&#x2F;27<br>D、19&#x2F;27<br>E、8&#x2F;27<br><img src="/img/mba/math_14.jpeg"></p></blockquote><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mathematica">解析：<br>这题初看起来会让人一脸蒙逼，但认真思考后发现可以用穷举法。<br>从<span class="hljs-variable">A</span>出发不过<span class="hljs-built_in">C</span>，那么只有向<span class="hljs-variable">B</span>和向<span class="hljs-built_in">D</span>走，走<span class="hljs-number">3</span>步，路径分别为：<br>向<span class="hljs-variable">B</span>出发：<span class="hljs-variable">ABAB</span>、<span class="hljs-variable">ABAD</span>、<span class="hljs-variable">ABDB</span>、<span class="hljs-variable">ABDA</span><br>向<span class="hljs-built_in">D</span>出发：<span class="hljs-variable">ADAD</span>、<span class="hljs-variable">ADAB</span>、<span class="hljs-variable">ADBD</span>、<span class="hljs-variable">ADBA</span><br>就这<span class="hljs-number">8</span>种了，但如果随机走，总步数有<span class="hljs-number">3</span><span class="hljs-operator">*</span><span class="hljs-number">3</span><span class="hljs-operator">*</span><span class="hljs-number">3</span><span class="hljs-operator">=</span><span class="hljs-number">27</span>种，故概率为<span class="hljs-number">8</span><span class="hljs-operator">/</span><span class="hljs-number">27</span><br>分析：<br>这题一开始把我也给搞蒙了，但细心思考还是能解的。<br></code></pre></td></tr></table></figure><br/><br/><blockquote><p>15、若科室有4名男职员，2名女职员，若将这6名职员分为3组，每组2人，且女职员不同组， 有( )种分组情况<br>A、4<br>B、6<br>C、9<br>D、12<br>E、15</p></blockquote><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs subunit">解析：<br>从题目看，要分成3组，4个男的只有2<span class="hljs-string">+1</span><span class="hljs-string">+1</span>这种分法。有C4取2即6种。<br>然后2个女性可以放到原先的1<span class="hljs-string">+1</span>上，有2种分法。<br>故总方法有6*2=12种。<br></code></pre></td></tr></table></figure><br/><br/><h1 id="二、说明"><a href="#二、说明" class="headerlink" title="二、说明"></a>二、说明</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">这曾经是我考研的那一年的考题，考完后，我写了一篇长长的分析讲解。如果有兴趣，下面是链接。<br><br>传送门：http:<span class="hljs-regexp">//</span>luntan.sunlands.com<span class="hljs-regexp">/community-pc-war/</span><span class="hljs-comment">#post/10558744</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>原创</category>
      
      <category>mba</category>
      
      <category>逆天改命</category>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mba</tag>
      
      <tag>数学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 文章标签等属性简介</title>
    <link href="/2022/10/14/hexo/Hexo%20%E6%96%87%E7%AB%A0%E6%A0%87%E7%AD%BE%E5%92%8C%E7%B1%BB%E5%88%AB%E7%AD%89%E5%B1%9E%E6%80%A7/"/>
    <url>/2022/10/14/hexo/Hexo%20%E6%96%87%E7%AB%A0%E6%A0%87%E7%AD%BE%E5%92%8C%E7%B1%BB%E5%88%AB%E7%AD%89%E5%B1%9E%E6%80%A7/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/daocao01.jpeg"></p><h1 id="一、属性预览"><a href="#一、属性预览" class="headerlink" title="一、属性预览"></a>一、属性预览</h1><ul><li>下面展示的是本文的开头部分：</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">文章标签等属性简介</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/daocao01.jpeg</span><br><span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/daocao01.jpeg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-10-14 12:30:00</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">Hexo</span>, <span class="hljs-string">Blog</span>, <span class="hljs-string">原创</span>, <span class="hljs-string">程序人生</span>, <span class="hljs-string">逆天改命</span>]<br><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> [<span class="hljs-string">Hexo</span>, <span class="hljs-string">Blog</span>]<br><span class="hljs-bullet">-</span> [<span class="hljs-string">逆天改命</span>]<br><span class="hljs-bullet">-</span> [<span class="hljs-string">程序人生</span>]<br><span class="hljs-bullet">-</span> [<span class="hljs-string">原创</span>]<br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></td></tr></table></figure><h1 id="二、图片"><a href="#二、图片" class="headerlink" title="二、图片"></a>二、图片</h1><h3 id="1、图片路径说明"><a href="#1、图片路径说明" class="headerlink" title="1、图片路径说明"></a>1、图片路径说明</h3><ul><li>通常来说，<code>/img/xxx.jpg</code> 命名的图片位置对应的是 <code>fluid/source/img/xxx.jpg</code> 路径。但我们放在根目录的 <code>source</code> 下也行。</li><li>本文是将 <code>daocao01.jpeg</code> 放在了根目录下的 <code>source/img/</code> 目录中。</li></ul><h3 id="2、文章首页图片"><a href="#2、文章首页图片" class="headerlink" title="2、文章首页图片"></a>2、文章首页图片</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">index_img: <span class="hljs-regexp">/img/</span>daocao01.jpeg<br></code></pre></td></tr></table></figure><ul><li><code>index_img</code> 属性标识着文章在首页列表展示时，所显示的图片，这个很好理解。</li></ul><h3 id="3、文章页面背景大图"><a href="#3、文章页面背景大图" class="headerlink" title="3、文章页面背景大图"></a>3、文章页面背景大图</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">banner_img: <span class="hljs-regexp">/img/</span>daocao01.jpeg<br></code></pre></td></tr></table></figure><ul><li><code>banner_img</code> 每篇文章开头部分都有一篇背景图，默认是海灯的那张，可以替换。</li></ul><h3 id="4、文章内图片引用"><a href="#4、文章内图片引用" class="headerlink" title="4、文章内图片引用"></a>4、文章内图片引用</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">![图片说明](<span class="hljs-regexp">/img/</span>daocao01.jpeg)<br></code></pre></td></tr></table></figure><ul><li>使用 <code>![](/img/xxx.jpg)</code> 来引用到文章内部，其中的中括号内可以写图片的一些说明。</li></ul><h1 id="三、标签"><a href="#三、标签" class="headerlink" title="三、标签"></a>三、标签</h1><ul><li>标签 <code>tags</code> 这个属性不存在子标签，故没有顺序。下面两种方式都会生成三个不同类型的标签。</li><li>方式一：</li></ul><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">tags:</span> [Hexo, Blog, 原创]<br></code></pre></td></tr></table></figure><ul><li>方式二：</li></ul><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">tags:</span><br>- Hexo<br>- Blog<br>- 原创<br></code></pre></td></tr></table></figure><h1 id="四、类别"><a href="#四、类别" class="headerlink" title="四、类别"></a>四、类别</h1><ul><li>类别 <code>categories</code> 这个属性和标签不一样，可以有子类别。以下方式会使得 <code>B</code> 成为 <code>A</code> 的子类别，而不是平级。</li></ul><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-attribute">categories</span>:<br><span class="hljs-literal">-</span> A<br><span class="hljs-literal">-</span> B<br></code></pre></td></tr></table></figure><ul><li>我们可以使用如下方式来产生四个不同的类别。其产生了三个平级的类别，其中的 <code>Blog</code> 属于 <code>Hexo</code> 的子类。</li></ul><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">categories</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">[Hexo, Blog]</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">[逆天改命]</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">[程序人生]</span><br></code></pre></td></tr></table></figure><h1 id="五、摘要"><a href="#五、摘要" class="headerlink" title="五、摘要"></a>五、摘要</h1><h3 id="1、指定摘要"><a href="#1、指定摘要" class="headerlink" title="1、指定摘要"></a>1、指定摘要</h3><ul><li>在文章头部，可以通过 <code>excerpt</code> 来指定摘要。摘要的主要作用是显示在主页的文章列表中。</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">文章标签等属性简介</span><br><span class="hljs-attr">excerpt:</span> <span class="hljs-string">我是摘要部分，显示在主页的列表中</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h3 id="2、自动摘要"><a href="#2、自动摘要" class="headerlink" title="2、自动摘要"></a>2、自动摘要</h3><ul><li>在文章内部可以使用 <code>&lt;!-- more --&gt; </code> 来标识摘要。在该标签的前面部分被视为摘要。这种方式产生的摘要会被 <code>excerpt</code> 覆盖。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml">文章内容xxx，摘要部分，显示在首页列表中。<br><span class="hljs-comment">&lt;!-- more --&gt;</span><br>文章内容xxx，不显示在首页列表。<br></code></pre></td></tr></table></figure><h1 id="六、文章置顶"><a href="#六、文章置顶" class="headerlink" title="六、文章置顶"></a>六、文章置顶</h1><ul><li>在文章头部，使用 <code>sticky</code> 来标识文章的优化级，值越大，文章越显示在前面部分，类似于置顶。</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">文章标签等属性简介</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/daocao01.jpeg</span><br><span class="hljs-attr">sticky:</span> <span class="hljs-number">100</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>程序人生</category>
      
      <category>Hexo</category>
      
      <category>原创</category>
      
      <category>Blog</category>
      
      <category>逆天改命</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
      <tag>Hexo</tag>
      
      <tag>Blog</tag>
      
      <tag>程序人生</tag>
      
      <tag>逆天改命</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 多端同步</title>
    <link href="/2022/10/13/Hexo-%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5/"/>
    <url>/2022/10/13/Hexo-%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/weimei036.jpeg" alt="图片来源zhuoku.com"></p><h1 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h1><ul><li>上一篇博客介绍了基于 Hexo 的搭建，但这只能在一台电脑生效。</li><li>Hexo 只会上传 public 文件夹的内容，源码不会部署。这意味着换一台电脑需要重新弄一份源码。</li><li>网上的方案基本上是在原 Repo 开分支，但这样你的博客源码全部暴露在外，不安全。</li></ul><h1 id="二、步骤"><a href="#二、步骤" class="headerlink" title="二、步骤"></a>二、步骤</h1><ul><li>本文采用在 Github 创建一个私有库来存放源码，新创建库 HexoSource</li><li>由于 Hexo 在 init 的时候已经为我们写好 .gitignore 文件，我们不需要再花时间弄一份。</li><li>因此，我们只需要在 hexo-blog 中 git init、git add、git commit、git push 到 HexoSource 即可。</li><li>另一台电脑上，直接 git clone、cd HexoSource、npm install 即可。</li><li>前提是已经安装了 Hexo。<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install hexo-<span class="hljs-keyword">cli</span> -g<br></code></pre></td></tr></table></figure></li></ul><h1 id="三、说明"><a href="#三、说明" class="headerlink" title="三、说明"></a>三、说明</h1><ul><li>两台电脑都需要在 Github 的 Settings 里配置 SSH key，是个程序员都会，这里就不多讲了。</li></ul><h1 id="四、结束"><a href="#四、结束" class="headerlink" title="四、结束"></a>四、结束</h1><ul><li>是不是比较简单呢？</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>原创</tag>
      
      <tag>[object Object]</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 Github + Hexo 搭建个人博客</title>
    <link href="/2022/10/12/%E4%BD%BF%E7%94%A8-Github-Hexo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/10/12/%E4%BD%BF%E7%94%A8-Github-Hexo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/bing06.jpeg"></p><h1 id="〇、说明"><a href="#〇、说明" class="headerlink" title="〇、说明"></a>〇、说明</h1><ul><li>本次搭建是以 Mac 平台为准，Windows 或其他平台的命令会有一些细微的不同。</li></ul><h1 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h1><h3 id="1、Github账号"><a href="#1、Github账号" class="headerlink" title="1、Github账号"></a>1、Github账号</h3><ul><li>没有 Github 账号就没得玩了，赶紧申请一个吧！</li><li>截止到目前，已经无法申请到纯英文的短账号了。我尝试了我的姓名的拼音注册，已经不让申请了，只能拼音+数字。</li></ul><h3 id="2、Git-安装"><a href="#2、Git-安装" class="headerlink" title="2、Git 安装"></a>2、Git 安装</h3><ul><li>没有 Git，就玩不转。建议自己去找找 Git 怎么安装的。</li></ul><h3 id="3、NodeJS"><a href="#3、NodeJS" class="headerlink" title="3、NodeJS"></a>3、NodeJS</h3><ul><li>如果你想在 IDEA 中运行 JS代码，这个是必须的，Hexo 也是基于 NodeJS。目前 NodeJS已经内置 npm 。</li><li>传送门：<a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></li></ul><h1 id="二、Github-仓库创建"><a href="#二、Github-仓库创建" class="headerlink" title="二、Github 仓库创建"></a>二、Github 仓库创建</h1><ul><li>登录 Github，进入 Repositories，点击 New 创建一个仓库。</li><li>仓库名必须是：用户名.github.io。如果不是，你的个人博客的链接会很长。</li><li>参考我的图片，因为我已经创建过了，再次创建同名的会有红色警告。<img src="/2022/10/12/%E4%BD%BF%E7%94%A8-Github-Hexo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/repo.jpg" class="" title="创建个人博客repo"></li><li>完成之后，你的博客已经搭建好了，链接为：用户名.github.io，但该博客并不是我们想的的，我们希望的博客是各种花里胡哨的，这就需要用到 Hexo 了。</li></ul><h1 id="三、Hexo-安装"><a href="#三、Hexo-安装" class="headerlink" title="三、Hexo 安装"></a>三、Hexo 安装</h1><ul><li><p>Hexo 功能齐全，能为我们节省很多成本。官网链接：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p></li><li><p>安装 Hexo</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure></li><li><p>查看版本，如果运行这个命令没报错即安装成功了</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo -v</span><br></code></pre></td></tr></table></figure></li><li><p>创建项目 hexo-blog 并初始化，这是三步</p>  <figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">hexo init hexo-<span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>cd hexo-<span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>npm <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure></li><li><p>本地启动</p>  <figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure></li><li><p>验证，浏览器打开：<a href="http://localhost:4000/">http://localhost:4000</a></p></li></ul><h1 id="四、主题更换"><a href="#四、主题更换" class="headerlink" title="四、主题更换"></a>四、主题更换</h1><ul><li>主要介绍比较流行的 NexT 和 Fluid，其他主题基本上类似的。</li></ul><h3 id="1、NexT-主题"><a href="#1、NexT-主题" class="headerlink" title="1、NexT 主题"></a>1、NexT 主题</h3><ul><li><p>安装</p>  <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd hexo-blog<br>git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/iissnan/</span>hexo-theme-<span class="hljs-keyword">next</span> themes/<span class="hljs-keyword">next</span><br></code></pre></td></tr></table></figure></li><li><p>打开 hexo-blog 根目录的 _config.yml 文件，将主题修改为 next</p>  <figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">theme:</span> <span class="hljs-keyword">next</span><br></code></pre></td></tr></table></figure></li><li><p>本地启动验证</p>  <figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g -d</span><br><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="2、Fluid-主题"><a href="#2、Fluid-主题" class="headerlink" title="2、Fluid 主题"></a>2、Fluid 主题</h3><ul><li><p>下载。从 github 下载最新的 release 版本，即 Source code。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">链接：https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/fluid-dev/</span>hexo-theme-fluid/releases<br></code></pre></td></tr></table></figure></li><li><p>安装。将下载的文件解压，改名为 fluid 并移动到 hexo-blog&#x2F;themes 目录中。</p></li><li><p>修改。打开 hexo-blog 根目录的 _config.yml 文件，将主题修改为 fluid</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">theme:</span> fluid    <span class="hljs-meta"># 指定主题</span><br><span class="hljs-symbol">language:</span> <span class="hljs-built_in">zh</span>-CN <span class="hljs-meta"># 指定语言</span><br></code></pre></td></tr></table></figure></li><li><p>创建 About 页面</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> about<br></code></pre></td></tr></table></figure></li><li><p>编写 About 页内容。打开 &#x2F;source&#x2F;about&#x2F;index.md，修改为如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">about</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-10-11 19:12:57</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">这是我的关于页</span><br></code></pre></td></tr></table></figure></li><li><p>验证</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g -d</span><br><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure></li></ul><h1 id="五、写博客"><a href="#五、写博客" class="headerlink" title="五、写博客"></a>五、写博客</h1><ul><li>启用 Assets。将根目录的 _config.yml 打开，修改 post_asset_folder 为 true。目的是在创建文章的时候会生成一个文件夹用于放图片等资源。<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure></li><li>创建文章<figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">post</span> 测试文章<br><span class="hljs-comment">// 这时候 source/_posts 目录下生成了一个 测试文章的文件夹和 md 文件</span><br></code></pre></td></tr></table></figure></li><li>添加内容。打开 md 文件，添加内容。<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">测试文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-10-11 19:16:46</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">原创</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">Java</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">这是一篇测试的文章，只有一行字和一张图片</span><br>&#123;<span class="hljs-string">%</span> <span class="hljs-string">asset_img</span> <span class="hljs-string">test.jpeg</span> <span class="hljs-string">图片引用方法一</span> <span class="hljs-string">%</span>&#125;<br></code></pre></td></tr></table></figure></li><li>验证<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">hexo g -d<br>hexo s<br>浏览器打开：http:<span class="hljs-regexp">//</span>localhost:<span class="hljs-number">4000</span><br></code></pre></td></tr></table></figure></li></ul><h1 id="六、博客个性化页面"><a href="#六、博客个性化页面" class="headerlink" title="六、博客个性化页面"></a>六、博客个性化页面</h1><h3 id="1、浏览器-Tab-页名称"><a href="#1、浏览器-Tab-页名称" class="headerlink" title="1、浏览器 Tab 页名称"></a>1、浏览器 Tab 页名称</h3><ul><li>打开根目录下的 _config.yml，修改 title 属性<figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"># Site<br><span class="hljs-symbol">title:</span> 先先的个人博客<br><span class="hljs-symbol">subtitle:</span> <span class="hljs-comment">&#x27;先先&#x27;</span><br><span class="hljs-symbol">description:</span> <span class="hljs-comment">&#x27;先先的个人博客&#x27;</span><br><span class="hljs-symbol">keywords:</span><br><span class="hljs-symbol">author:</span> Jiang<br><span class="hljs-symbol">language:</span> zh-CN<br><span class="hljs-symbol">timezone:</span> <span class="hljs-comment">&#x27;&#x27;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="2、修改博客标题"><a href="#2、修改博客标题" class="headerlink" title="2、修改博客标题"></a>2、修改博客标题</h3><ul><li>打开 themes&#x2F;fluid 下的 _config.yml，修改 blog_title 字段：<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">blog_title:</span> <span class="hljs-string">&quot;先先的个人博客&quot;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="3、修改主页文字"><a href="#3、修改主页文字" class="headerlink" title="3、修改主页文字"></a>3、修改主页文字</h3><ul><li>打开 themes&#x2F;fluid 下的 _config.yml，修改 text 字段：<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-built_in">text</span>: <span class="hljs-string">&quot;先先的个人博客&quot;</span><br></code></pre></td></tr></table></figure></li></ul><h1 id="七、添加阅读量数据"><a href="#七、添加阅读量数据" class="headerlink" title="七、添加阅读量数据"></a>七、添加阅读量数据</h1><ul><li>Fluid 已经内置了阅读量的功能，但默认没有开启。</li></ul><h3 id="1、申请-LeanCloud-账号，并创建应用"><a href="#1、申请-LeanCloud-账号，并创建应用" class="headerlink" title="1、申请 LeanCloud 账号，并创建应用"></a>1、申请 LeanCloud 账号，并创建应用</h3><ul><li><p>注册账号。 这里必须要注意，选择国际版。国内的2个版本已经不再提供服务。 传送门：<a href="https://console.leancloud.cn/apps">https://console.leancloud.cn/apps</a></p></li><li><p>实名认证</p></li><li><p>邮箱验证</p></li><li><p>创建应用。选开发版</p></li><li><p>创建 Class。在结构化数据中创建 Class，名称为 Counter，选无限制。这一步是关键。</p></li><li><p>配置 AppID、AppKey 及 服务器地址，三者缺一不可。 在应用的 设置 - 应用凭证 页面可以看到这三项。</p></li></ul><h3 id="2、修改-Fluid-配置"><a href="#2、修改-Fluid-配置" class="headerlink" title="2、修改 Fluid 配置"></a>2、修改 Fluid 配置</h3><ul><li><p>打开 themes&#x2F;fluid 下的 _config.yml，修改 web_analytics 的 enable 为 true。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">web_analytics:</span>  <span class="hljs-comment"># 网页访问统计</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure></li><li><p>配置 leancloud 的 app_id、app_key 和 server_url，注意冒号后的空格。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">leancloud:</span><br><span class="hljs-symbol">  app_id:</span> xxxxxxxx<br><span class="hljs-symbol">  app_key:</span> xxxxxxxx<br><span class="hljs-symbol">  server_url:</span> https:<span class="hljs-comment">//xxxxxxxx.lc-cn-n1-shared.com</span><br></code></pre></td></tr></table></figure></li><li><p>修改 views 字段的 enable 为true，srouce 为 “leancloud”，打开统计功能，统计源改为 leancloud。</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-meta"># 浏览量计数</span><br><span class="hljs-meta"># Number of visits</span><br><span class="hljs-symbol">views:</span><br><span class="hljs-symbol">enable:</span> true<br><span class="hljs-symbol">source:</span> <span class="hljs-string">&quot;leancloud&quot;</span><br><span class="hljs-symbol">format:</span> <span class="hljs-string">&quot;&#123;&#125; 次&quot;</span><br></code></pre></td></tr></table></figure></li></ul><h1 id="八、添加评论功能"><a href="#八、添加评论功能" class="headerlink" title="八、添加评论功能"></a>八、添加评论功能</h1><ul><li>打开 themes&#x2F;fluid 下的 _config.yml，修改 comments 字段下的 enable 为 true，type 为 valine。<figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs coq"># 评论插件<br># Comment plugin<br>comments:<br>  enable: true<br>  # 指定的插件，需要同时设置对应插件的必要参数<br>  # The specified plugin needs to <span class="hljs-built_in">set</span> the necessary parameters <span class="hljs-built_in">at</span> the same <span class="hljs-built_in">time</span><br>  # <span class="hljs-keyword">Options</span>: utterances | <span class="hljs-type">disqus</span> | <span class="hljs-type">gitalk</span> | <span class="hljs-type">valine</span> | <span class="hljs-type">waline</span> | <span class="hljs-type">changyan</span> | <span class="hljs-type">livere</span> | <span class="hljs-type">remark42</span> | <span class="hljs-type">twikoo</span> | <span class="hljs-type">cusdis</span> | <span class="hljs-type">giscus</span><br>  type: valine<br></code></pre></td></tr></table></figure></li><li>配置 valine 字段下的 appId、appKey 和 serverURLs 属性。<figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-attribute">valine</span>:<br><span class="hljs-attribute">appId</span>: xxxxxxxx<br><span class="hljs-attribute">appKey</span>: xxxxxxxx<br>...<br><span class="hljs-attribute">serverURLs</span>: &#x27;https://xxxxxxxx.lc-cn-n1-shared.com&#x27;  <span class="hljs-comment"># 把xxxxxxxx替换成你自己AppID的前8位字符</span><br></code></pre></td></tr></table></figure></li></ul><h1 id="九、部署到-Github"><a href="#九、部署到-Github" class="headerlink" title="九、部署到 Github"></a>九、部署到 Github</h1><h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><ul><li>安装 hexo-deployer-git<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure></li><li>修改根目录下的 _config.yml，配置 Github 信息。建议使用 git 开头的，而不是 https 的形式。<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">type:</span> git<br><span class="hljs-symbol">repo:</span> git@github.com:jxr202/jxr202.github.io.git<br><span class="hljs-symbol">branch:</span> main<br></code></pre></td></tr></table></figure></li><li>部署到 Github<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g -d</span><br></code></pre></td></tr></table></figure></li><li>验证。打开 <a href="https://jxr202.github.io/">https://jxr202.github.io</a> 验证。</li></ul><h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><ul><li>直接将 public 目录中的所有目录和文件 push 到 Github 仓库中。</li></ul><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><pre><code class="hljs">本文参考了一些其他人的资料，在此表示感谢。参考链接：https://blog.csdn.net/yaorongke/article/details/119089190</code></pre>]]></content>
    
    
    <categories>
      
      <category>程序人生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2022/10/11/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2022/10/11/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>这是一篇测试的文章，只有一行字和一张图片</p><img src="/2022/10/11/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/test.jpeg" class="" title="图片引用方法一"><p><img src="/test.jpeg" alt="图片引用方法二"></p><p><img src="/test.jpeg" alt="图片引用方法二"></p>]]></content>
    
    
    
    <tags>
      
      <tag>原创</tag>
      
      <tag>[object Object]</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/10/11/hello-world/"/>
    <url>/2022/10/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
